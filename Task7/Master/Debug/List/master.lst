
AVRASM ver. 2.1.30  D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm Sat May 22 03:18:54 2021

D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1088): warning: Register r4 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1089): warning: Register r5 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1090): warning: Register r6 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1091): warning: Register r7 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1092): warning: Register r8 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1093): warning: Register r9 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1094): warning: Register r10 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1095): warning: Register r11 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1096): warning: Register r12 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\serial\Master\Debug\List\master.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _x=R4
                 	.DEF _x_msb=R5
                 	.DEF _pos_x=R6
                 	.DEF _pos_x_msb=R7
                 	.DEF _pos_y=R8
                 	.DEF _pos_y_msb=R9
                 	.DEF _i=R10
                 	.DEF _i_msb=R11
                 	.DEF _j=R12
                 	.DEF _j_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01dd 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000033 0000      	.DW  0x0000
                 
                 _0x0:
000034 6e45
000035 6574
000036 2072
000037 6150      	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x50,0x61
000038 7373
000039 7420
00003a 206f
00003b 4953      	.DB  0x73,0x73,0x20,0x74,0x6F,0x20,0x53,0x49
00003c 4e47
00003d 5055
00003e 0020
00003f 2020      	.DB  0x47,0x4E,0x55,0x50,0x20,0x0,0x20,0x20
000040 6854
000041 6e65
000042 5020
000043 6572      	.DB  0x54,0x68,0x65,0x6E,0x20,0x50,0x72,0x65
000044 7373
000045 3c20
000046 3e23
000047 0020      	.DB  0x73,0x73,0x20,0x3C,0x23,0x3E,0x20,0x0
000048 3d3d
000049 203e
00004a 4500
00004b 746e      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x45,0x6E,0x74
00004c 7265
00004d 5020
00004e 7361
00004f 2073      	.DB  0x65,0x72,0x20,0x50,0x61,0x73,0x73,0x20
000050 6f74
000051 6c20
000052 676f
000053 6e69      	.DB  0x74,0x6F,0x20,0x6C,0x6F,0x67,0x69,0x6E
000054 5500
000055 4553
000056 2052
000057 4f4e      	.DB  0x0,0x55,0x53,0x45,0x52,0x20,0x4E,0x4F
000058 2054
000059 4f46
00005a 4e55
00005b 0044      	.DB  0x54,0x20,0x46,0x4F,0x55,0x4E,0x44,0x0
00005c 2020
00005d 5245
00005e 4f52
00005f 2052      	.DB  0x20,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
000060 2020
000061 4520
000062 5252
000063 524f      	.DB  0x20,0x20,0x20,0x45,0x52,0x52,0x4F,0x52
000064 4c00
000065 474f
000066 4445
000067 4920      	.DB  0x0,0x4C,0x4F,0x47,0x45,0x44,0x20,0x49
000068 204e
000069 7553
00006a 6363
00006b 7365      	.DB  0x4E,0x20,0x53,0x75,0x63,0x63,0x65,0x73
00006c 7566
00006d 6c6c
00006e 0079
00006f 4150      	.DB  0x66,0x75,0x6C,0x6C,0x79,0x0,0x50,0x41
000070 5353
000071 4920
000072 434e
000073 524f      	.DB  0x53,0x53,0x20,0x49,0x4E,0x43,0x4F,0x52
000074 4552
000075 5443
000076 2500
000077 0064      	.DB  0x52,0x45,0x43,0x54,0x0,0x25,0x64,0x0
000078 6e45
000079 6574
00007a 2072
00007b 4449      	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x49,0x44
00007c 7420
00007d 206f
00007e 4953
00007f 4e47      	.DB  0x20,0x74,0x6F,0x20,0x53,0x49,0x47,0x4E
000080 5520
000081 2050
000082 4500
000083 746e      	.DB  0x20,0x55,0x50,0x20,0x0,0x45,0x6E,0x74
000084 7265
000085 4920
000086 2044
000087 6f74      	.DB  0x65,0x72,0x20,0x49,0x44,0x20,0x74,0x6F
000088 6c20
000089 676f
00008a 6920
00008b 206e      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x69,0x6E,0x20
00008c 4c00
00008d 474f
00008e 4445
00008f 4920      	.DB  0x0,0x4C,0x4F,0x47,0x45,0x44,0x20,0x49
000090 204e
000091 5341
000092 3a20
000093 4120      	.DB  0x4E,0x20,0x41,0x53,0x20,0x3A,0x20,0x41
000094 4d44
000095 4e49
000096 3100
000097 202d      	.DB  0x44,0x4D,0x49,0x4E,0x0,0x31,0x2D,0x20
000098 4441
000099 2044
00009a 5355
00009b 5245      	.DB  0x41,0x44,0x44,0x20,0x55,0x53,0x45,0x52
00009c 3200
00009d 202d
00009e 4553
00009f 2054      	.DB  0x0,0x32,0x2D,0x20,0x53,0x45,0x54,0x20
0000a0 4954
0000a1 454d
0000a2 2f20
0000a3 4420      	.DB  0x54,0x49,0x4D,0x45,0x20,0x2F,0x20,0x44
0000a4 5441
0000a5 2045
0000a6 3300
0000a7 202d      	.DB  0x41,0x54,0x45,0x20,0x0,0x33,0x2D,0x20
0000a8 4f4c
0000a9 2047
0000aa 554f
0000ab 0054      	.DB  0x4C,0x4F,0x47,0x20,0x4F,0x55,0x54,0x0
0000ac 4f4c
0000ad 4547
0000ae 2044
0000af 4e49      	.DB  0x4C,0x4F,0x47,0x45,0x44,0x20,0x49,0x4E
0000b0 4120
0000b1 2053
0000b2 203a
0000b3 5355      	.DB  0x20,0x41,0x53,0x20,0x3A,0x20,0x55,0x53
0000b4 5245
0000b5 3100
0000b6 202d
0000b7 4843      	.DB  0x45,0x52,0x0,0x31,0x2D,0x20,0x43,0x48
0000b8 4345
0000b9 204b
0000ba 4144
0000bb 4554      	.DB  0x45,0x43,0x4B,0x20,0x44,0x41,0x54,0x45
0000bc 542f
0000bd 4d49
0000be 0045
0000bf 2d32      	.DB  0x2F,0x54,0x49,0x4D,0x45,0x0,0x32,0x2D
0000c0 5420
0000c1 4d45
0000c2 4550
0000c3 4152      	.DB  0x20,0x54,0x45,0x4D,0x50,0x45,0x52,0x41
0000c4 5554
0000c5 4552
0000c6 0020
0000c7 2d33      	.DB  0x54,0x55,0x52,0x45,0x20,0x0,0x33,0x2D
0000c8 5320
0000c9 4554
0000ca 2050
0000cb 4f4d      	.DB  0x20,0x53,0x54,0x45,0x50,0x20,0x4D,0x4F
0000cc 4f54
0000cd 0052
0000ce 6f54
0000cf 5320      	.DB  0x54,0x4F,0x52,0x0,0x54,0x6F,0x20,0x53
0000d0 5445
0000d1 7020
0000d2 6572
0000d3 7373      	.DB  0x45,0x54,0x20,0x70,0x72,0x65,0x73,0x73
0000d4 3c20
0000d5 3e2a
0000d6 0020
0000d7 6e45      	.DB  0x20,0x3C,0x2A,0x3E,0x20,0x0,0x45,0x6E
0000d8 6574
0000d9 2072
0000da 6559
0000db 7261      	.DB  0x74,0x65,0x72,0x20,0x59,0x65,0x61,0x72
0000dc 3a20
0000dd 0020
0000de 6e45
0000df 6574      	.DB  0x20,0x3A,0x20,0x0,0x45,0x6E,0x74,0x65
0000e0 2072
0000e1 6f6d
0000e2 6e75
0000e3 2074      	.DB  0x72,0x20,0x6D,0x6F,0x75,0x6E,0x74,0x20
0000e4 203a
0000e5 4500
0000e6 746e
0000e7 7265      	.DB  0x3A,0x20,0x0,0x45,0x6E,0x74,0x65,0x72
0000e8 6420
0000e9 7961
0000ea 3a20
0000eb 0020      	.DB  0x20,0x64,0x61,0x79,0x20,0x3A,0x20,0x0
0000ec 6e45
0000ed 6574
0000ee 2072
0000ef 6f68      	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x68,0x6F
0000f0 7275
0000f1 3a20
0000f2 0020
0000f3 6e45      	.DB  0x75,0x72,0x20,0x3A,0x20,0x0,0x45,0x6E
0000f4 6574
0000f5 2072
0000f6 696d
0000f7 756e      	.DB  0x74,0x65,0x72,0x20,0x6D,0x69,0x6E,0x75
0000f8 6574
0000f9 3a20
0000fa 0020
0000fb 2020      	.DB  0x74,0x65,0x20,0x3A,0x20,0x0,0x20,0x20
0000fc 2020
0000fd 3c20
0000fe 203c
0000ff 4144      	.DB  0x20,0x20,0x20,0x3C,0x3C,0x20,0x44,0x41
000100 4554
000101 3e20
000102 203e
000103 2020      	.DB  0x54,0x45,0x20,0x3E,0x3E,0x20,0x20,0x20
000104 0020
000105 2020
000106 2020
000107 2020      	.DB  0x20,0x0,0x20,0x20,0x20,0x20,0x20,0x20
000108 6425
000109 2f20
00010a 2520
00010b 2064      	.DB  0x25,0x64,0x20,0x2F,0x20,0x25,0x64,0x20
00010c 202f
00010d 6425
00010e 0020
00010f 2020      	.DB  0x2F,0x20,0x25,0x64,0x20,0x0,0x20,0x20
000110 2020
000111 3c20
000112 203c
000113 4954      	.DB  0x20,0x20,0x20,0x3C,0x3C,0x20,0x54,0x49
000114 454d
000115 3e20
000116 203e
000117 2020      	.DB  0x4D,0x45,0x20,0x3E,0x3E,0x20,0x20,0x20
000118 0020
000119 2020
00011a 2020
00011b 2020      	.DB  0x20,0x0,0x20,0x20,0x20,0x20,0x20,0x20
00011c 2520
00011d 2064
00011e 203a
00011f 6425      	.DB  0x20,0x25,0x64,0x20,0x3A,0x20,0x25,0x64
000120 2020
000121 2020
000122 0020
000123 4554      	.DB  0x20,0x20,0x20,0x20,0x20,0x0,0x54,0x45
000124 504d
000125 5400
000126 6d65
000127 2070      	.DB  0x4D,0x50,0x0,0x54,0x65,0x6D,0x70,0x20
000128 003d
000129 2020
00012a 6e65
00012b 6574      	.DB  0x3D,0x0,0x20,0x20,0x65,0x6E,0x74,0x65
00012c 2072
00012d 7473
00012e 7065
00012f 6d20      	.DB  0x72,0x20,0x73,0x74,0x65,0x70,0x20,0x6D
000130 746f
000131 726f
000132 2020
000133 7300      	.DB  0x6F,0x74,0x6F,0x72,0x20,0x20,0x0,0x73
000134 6574
000135 7370
000136 6220
000137 7465      	.DB  0x74,0x65,0x70,0x73,0x20,0x62,0x65,0x74
000138 6577
000139 6e65
00013a 3228
00013b 342d      	.DB  0x77,0x65,0x65,0x6E,0x28,0x32,0x2D,0x34
00013c 382d
00013d 0029
00013e 7473
00013f 7065      	.DB  0x2D,0x38,0x29,0x0,0x73,0x74,0x65,0x70
000140 2520
000141 0064      	.DB  0x20,0x25,0x64,0x0
                 _0x2000003:
000142 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000143 0001      	.DW  0x01
000144 0002      	.DW  0x02
000145 0066      	.DW  __REG_BIT_VARS*2
                 
000146 0016      	.DW  0x16
000147 0260      	.DW  _0x6
000148 0068      	.DW  _0x0*2
                 
000149 0012      	.DW  0x12
00014a 0276      	.DW  _0x6+22
00014b 007e      	.DW  _0x0*2+22
                 
00014c 0005      	.DW  0x05
00014d 0288      	.DW  _0x6+40
00014e 0090      	.DW  _0x0*2+40
                 
00014f 0014      	.DW  0x14
000150 028d      	.DW  _0x6+45
000151 0095      	.DW  _0x0*2+45
                 
000152 0012      	.DW  0x12
000153 02a1      	.DW  _0x6+65
000154 007e      	.DW  _0x0*2+22
                 
000155 0005      	.DW  0x05
000156 02b3      	.DW  _0x6+83
000157 0090      	.DW  _0x0*2+40
                 
000158 000f      	.DW  0x0F
000159 02b8      	.DW  _0x6+88
00015a 00a9      	.DW  _0x0*2+65
                 
00015b 0011      	.DW  0x11
00015c 02c7      	.DW  _0x6+103
00015d 00b8      	.DW  _0x0*2+80
                 
00015e 0015      	.DW  0x15
00015f 02d8      	.DW  _0x6+120
000160 00c9      	.DW  _0x0*2+97
                 
000161 000f      	.DW  0x0F
000162 02ed      	.DW  _0x6+141
000163 00de      	.DW  _0x0*2+118
                 
000164 0011      	.DW  0x11
000165 02fc      	.DW  _0x6+156
000166 00b8      	.DW  _0x0*2+80
                 
000167 0015      	.DW  0x15
000168 030d      	.DW  _0x43
000169 00f0      	.DW  _0x0*2+136
                 
00016a 0012      	.DW  0x12
00016b 0322      	.DW  _0x43+21
00016c 007e      	.DW  _0x0*2+22
                 
00016d 0005      	.DW  0x05
00016e 0334      	.DW  _0x43+39
00016f 0090      	.DW  _0x0*2+40
                 
000170 0014      	.DW  0x14
000171 0339      	.DW  _0x43+44
000172 0105      	.DW  _0x0*2+157
                 
000173 0012      	.DW  0x12
000174 034d      	.DW  _0x43+64
000175 007e      	.DW  _0x0*2+22
                 
000176 0005      	.DW  0x05
000177 035f      	.DW  _0x43+82
000178 0090      	.DW  _0x0*2+40
                 
000179 0014      	.DW  0x14
00017a 0364      	.DW  _0x43+87
00017b 0119      	.DW  _0x0*2+177
                 
00017c 000c      	.DW  0x0C
00017d 0378      	.DW  _0x43+107
00017e 012d      	.DW  _0x0*2+197
                 
00017f 0014      	.DW  0x14
000180 0384      	.DW  _0x43+119
000181 0139      	.DW  _0x0*2+209
                 
000182 000b      	.DW  0x0B
000183 0398      	.DW  _0x43+139
000184 014d      	.DW  _0x0*2+229
                 
000185 0013      	.DW  0x13
000186 03a3      	.DW  _0x43+150
000187 0158      	.DW  _0x0*2+240
                 
000188 0013      	.DW  0x13
000189 03b6      	.DW  _0x43+169
00018a 016b      	.DW  _0x0*2+259
                 
00018b 0010      	.DW  0x10
00018c 03c9      	.DW  _0x43+188
00018d 017e      	.DW  _0x0*2+278
                 
00018e 000e      	.DW  0x0E
00018f 03d9      	.DW  _0x43+204
000190 018e      	.DW  _0x0*2+294
                 
000191 0015      	.DW  0x15
000192 03e7      	.DW  _0x43+218
000193 00f0      	.DW  _0x0*2+136
                 
000194 0012      	.DW  0x12
000195 03fc      	.DW  _0x43+239
000196 007e      	.DW  _0x0*2+22
                 
000197 0005      	.DW  0x05
000198 040e      	.DW  _0x43+257
000199 0090      	.DW  _0x0*2+40
                 
00019a 0012      	.DW  0x12
00019b 0413      	.DW  _0x43+262
00019c 019c      	.DW  _0x0*2+308
                 
00019d 000e      	.DW  0x0E
00019e 0425      	.DW  _0x43+280
00019f 01ae      	.DW  _0x0*2+326
                 
0001a0 0005      	.DW  0x05
0001a1 0433      	.DW  _0x43+294
0001a2 0090      	.DW  _0x0*2+40
                 
0001a3 0012      	.DW  0x12
0001a4 0438      	.DW  _0x43+299
0001a5 019c      	.DW  _0x0*2+308
                 
0001a6 000f      	.DW  0x0F
0001a7 044a      	.DW  _0x43+317
0001a8 01bc      	.DW  _0x0*2+340
                 
0001a9 0005      	.DW  0x05
0001aa 0459      	.DW  _0x43+332
0001ab 0090      	.DW  _0x0*2+40
                 
0001ac 0012      	.DW  0x12
0001ad 045e      	.DW  _0x43+337
0001ae 019c      	.DW  _0x0*2+308
                 
0001af 000d      	.DW  0x0D
0001b0 0470      	.DW  _0x43+355
0001b1 01cb      	.DW  _0x0*2+355
                 
0001b2 0005      	.DW  0x05
0001b3 047d      	.DW  _0x43+368
0001b4 0090      	.DW  _0x0*2+40
                 
0001b5 0012      	.DW  0x12
0001b6 0482      	.DW  _0x43+373
0001b7 019c      	.DW  _0x0*2+308
                 
0001b8 000e      	.DW  0x0E
0001b9 0494      	.DW  _0x43+391
0001ba 01d8      	.DW  _0x0*2+368
                 
0001bb 0005      	.DW  0x05
0001bc 04a2      	.DW  _0x43+405
0001bd 0090      	.DW  _0x0*2+40
                 
0001be 0012      	.DW  0x12
0001bf 04a7      	.DW  _0x43+410
0001c0 019c      	.DW  _0x0*2+308
                 
0001c1 0010      	.DW  0x10
0001c2 04b9      	.DW  _0x43+428
0001c3 01e6      	.DW  _0x0*2+382
                 
0001c4 0005      	.DW  0x05
0001c5 04c9      	.DW  _0x43+444
0001c6 0090      	.DW  _0x0*2+40
                 
0001c7 0014      	.DW  0x14
0001c8 04ce      	.DW  _0x43+449
0001c9 01f6      	.DW  _0x0*2+398
                 
0001ca 0014      	.DW  0x14
0001cb 04e2      	.DW  _0x43+469
0001cc 021e      	.DW  _0x0*2+438
                 
0001cd 0005      	.DW  0x05
0001ce 04f6      	.DW  _0x43+489
0001cf 0246      	.DW  _0x0*2+478
                 
0001d0 0007      	.DW  0x07
0001d1 04fb      	.DW  _0x43+494
0001d2 024b      	.DW  _0x0*2+483
                 
0001d3 0015      	.DW  0x15
0001d4 0502      	.DW  _0x43+501
0001d5 0252      	.DW  _0x0*2+490
                 
0001d6 0015      	.DW  0x15
0001d7 0517      	.DW  _0x43+522
0001d8 0267      	.DW  _0x0*2+511
                 
0001d9 0002      	.DW  0x02
0001da 05a0      	.DW  __base_y_G100
0001db 0284      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
0001dc 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001dd 94f8      	CLI
0001de 27ee      	CLR  R30
0001df bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001e0 e0f1      	LDI  R31,1
0001e1 bffb      	OUT  GICR,R31
0001e2 bfeb      	OUT  GICR,R30
0001e3 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0001e4 e08d      	LDI  R24,(14-2)+1
0001e5 e0a2      	LDI  R26,2
0001e6 27bb      	CLR  R27
                 __CLEAR_REG:
0001e7 93ed      	ST   X+,R30
0001e8 958a      	DEC  R24
0001e9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001ea e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001eb e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001ec e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0001ed 93ed      	ST   X+,R30
0001ee 9701      	SBIW R24,1
0001ef f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001f0 e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001f1 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001f2 9185      	LPM  R24,Z+
0001f3 9195      	LPM  R25,Z+
0001f4 9700      	SBIW R24,0
0001f5 f061      	BREQ __GLOBAL_INI_END
0001f6 91a5      	LPM  R26,Z+
0001f7 91b5      	LPM  R27,Z+
0001f8 9005      	LPM  R0,Z+
0001f9 9015      	LPM  R1,Z+
0001fa 01bf      	MOVW R22,R30
0001fb 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001fc 9005      	LPM  R0,Z+
0001fd 920d      	ST   X+,R0
0001fe 9701      	SBIW R24,1
0001ff f7e1      	BRNE __GLOBAL_INI_LOOP
000200 01fb      	MOVW R30,R22
000201 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000202 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000203 bfed      	OUT  SPL,R30
000204 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000205 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000206 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000207 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000208 940c 035a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Chip type               : ATmega32
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*******************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;
                 ;#define   ROW1   PORTC.0
                 ;#define   ROW2   PORTC.1
                 ;#define   ROW3   PORTC.2
                 ;#define   ROW4   PORTC.3
                 ;#define   C1     PINC.4
                 ;#define   C2     PINC.5
                 ;#define   C3     PINC.6
                 ;
                 ;#define   RED     PORTD.6
                 ;#define   GREEN   PORTD.7
                 ;
                 ;int x , pos_x , pos_y , i , j , log_id ;
                 ;bit press,new_id,new_pass,break_mode,error,id_chk  ;
                 ;unsigned char c[20] ;
                 ;
                 ;long int id[10],pass[10];
                 ;long int check ;
                 ;
                 ;
                 ;int year , mounth , day , hour , minute ;
                 ;
                 ;
                 ;void show()
                 ; 0000 0027 {
                 
                 	.CSEG
                 _show:
                 ; .FSTART _show
                 ; 0000 0028     if(press == 1)
00020a fe20      	SBRS R2,0
00020b c0e1      	RJMP _0x3
                 ; 0000 0029     {
                 ; 0000 002A         press = 0 ;
00020c 94e8      	CLT
00020d f820      	BLD  R2,0
                 ; 0000 002B 
                 ; 0000 002C         if(x == 200)
00020e ece8      	LDI  R30,LOW(200)
00020f e0f0      	LDI  R31,HIGH(200)
000210 15e4      	CP   R30,R4
000211 05f5      	CPC  R31,R5
000212 f009      	BREQ PC+2
000213 c07b      	RJMP _0x4
                 ; 0000 002D         {
                 ; 0000 002E             if(new_id == 1)
000214 fe21      	SBRS R2,1
000215 c012      	RJMP _0x5
                 ; 0000 002F             {
                 ; 0000 0030              new_id = 0 ;
000216 f821      	BLD  R2,1
                 ; 0000 0031              new_pass = 1 ;
000217 9468      	SET
000218 f822      	BLD  R2,2
                 ; 0000 0032              lcd_clear() ;
000219 940e 0836 	CALL SUBOPT_0x0
                 ; 0000 0033              lcd_gotoxy(0,0);
                 ; 0000 0034             lcd_puts("Enter Pass to SIGNUP ");
                +
00021b e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
00021c e0b2     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
00021d 940e 083d 	CALL SUBOPT_0x1
                 ; 0000 0035             lcd_gotoxy(1,1);
                 ; 0000 0036             lcd_puts("  Then Press <#> ");
                +
00021f e7a6     +LDI R26 , LOW ( _0x6 + ( 22 ) )
000220 e0b2     +LDI R27 , HIGH ( _0x6 + ( 22 ) )
                 	__POINTW2MN _0x6,22
000221 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0037 
                 ; 0000 0038             lcd_gotoxy(0,3);
                 ; 0000 0039             lcd_puts("==> ");
                +
000223 e8a8     +LDI R26 , LOW ( _0x6 + ( 40 ) )
000224 e0b2     +LDI R27 , HIGH ( _0x6 + ( 40 ) )
                 	__POINTW2MN _0x6,40
000225 940e 084b 	CALL SUBOPT_0x3
                 ; 0000 003A 
                 ; 0000 003B                 pos_x = 4 ;
                 ; 0000 003C                 pos_y = 3 ;
                 ; 0000 003D             }
                 ; 0000 003E             else if(new_pass == 1)
000227 c066      	RJMP _0x7
                 _0x5:
000228 fe22      	SBRS R2,2
000229 c00b      	RJMP _0x8
                 ; 0000 003F             {
                 ; 0000 0040              i++  ;
00022a 01f5      	MOVW R30,R10
00022b 9631      	ADIW R30,1
00022c 015f      	MOVW R10,R30
00022d 9731      	SBIW R30,1
                 ; 0000 0041              new_pass = 0 ;
00022e 94e8      	CLT
00022f f822      	BLD  R2,2
                 ; 0000 0042              lcd_clear();
000230 940e 05c3 	CALL _lcd_clear
                 ; 0000 0043              break_mode = 1;
000232 9468      	SET
000233 f823      	BLD  R2,3
                 ; 0000 0044             }
                 ; 0000 0045             else if(id_chk == 1) // id check
000234 c059      	RJMP _0x9
                 _0x8:
000235 fe25      	SBRS R2,5
000236 c033      	RJMP _0xA
                 ; 0000 0046             {
                 ; 0000 0047             error = 1 ;
000237 9468      	SET
000238 f824      	BLD  R2,4
                 ; 0000 0048                for(j = 0 ; j < i ; j++ )
000239 24cc      	CLR  R12
00023a 24dd      	CLR  R13
                 _0xC:
                +
00023b 14ca     +CP R12 , R10
00023c 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
00023d f4f4      	BRGE _0xD
                 ; 0000 0049                 {
                 ; 0000 004A                     if(check == id[j])
00023e 01f6      	MOVW R30,R12
00023f 940e 0854 	CALL SUBOPT_0x4
000241 940e 0859 	CALL SUBOPT_0x5
000243 f4a1      	BRNE _0xE
                 ; 0000 004B                     {
                 ; 0000 004C                         id_chk = 0 ;
000244 940e 0868 	CALL SUBOPT_0x6
                 ; 0000 004D                         check = 0 ;
                 ; 0000 004E 
                 ; 0000 004F                         lcd_clear() ;
                 ; 0000 0050                         lcd_gotoxy(0,0);
                 ; 0000 0051                         lcd_puts("Enter Pass to login");
                +
000246 e8ad     +LDI R26 , LOW ( _0x6 + ( 45 ) )
000247 e0b2     +LDI R27 , HIGH ( _0x6 + ( 45 ) )
                 	__POINTW2MN _0x6,45
000248 940e 083d 	CALL SUBOPT_0x1
                 ; 0000 0052                         lcd_gotoxy(1,1);
                 ; 0000 0053                         lcd_puts("  Then Press <#> ");
                +
00024a eaa1     +LDI R26 , LOW ( _0x6 + ( 65 ) )
00024b e0b2     +LDI R27 , HIGH ( _0x6 + ( 65 ) )
                 	__POINTW2MN _0x6,65
00024c 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0054 
                 ; 0000 0055                         lcd_gotoxy(0,3);
                 ; 0000 0056                         lcd_puts("==> ");
                +
00024e eba3     +LDI R26 , LOW ( _0x6 + ( 83 ) )
00024f e0b2     +LDI R27 , HIGH ( _0x6 + ( 83 ) )
                 	__POINTW2MN _0x6,83
000250 940e 084b 	CALL SUBOPT_0x3
                 ; 0000 0057 
                 ; 0000 0058                             pos_x = 4 ;
                 ; 0000 0059                             pos_y = 3 ;
                 ; 0000 005A                             error = 0 ;
000252 940e 0874 	CALL SUBOPT_0x7
                 ; 0000 005B                         GREEN = 1 ;
                 ; 0000 005C                         delay_ms(500);
                 ; 0000 005D                         GREEN = 0 ;
                 ; 0000 005E 
                 ; 0000 005F                         log_id = j ;
                +
000254 92c0 052c+STS _log_id + ( 0 ) , R12
000256 92d0 052d+STS _log_id + ( 0 ) + 1 , R13
                 	__PUTWMRN _log_id,0,12,13
                 ; 0000 0060                     }
                 ; 0000 0061                 }
                 _0xE:
000258 01f6      	MOVW R30,R12
000259 9631      	ADIW R30,1
00025a 016f      	MOVW R12,R30
00025b cfdf      	RJMP _0xC
                 _0xD:
                 ; 0000 0062 
                 ; 0000 0063                 if(error == 1)
00025c fe24      	SBRS R2,4
00025d c00b      	RJMP _0x13
                 ; 0000 0064                 {
                 ; 0000 0065                         lcd_clear() ;
00025e 940e 087d 	CALL SUBOPT_0x8
                 ; 0000 0066                         lcd_gotoxy(3,0);
                 ; 0000 0067                         lcd_puts("USER NOT FOUND");
                +
000260 eba8     +LDI R26 , LOW ( _0x6 + ( 88 ) )
000261 e0b2     +LDI R27 , HIGH ( _0x6 + ( 88 ) )
                 	__POINTW2MN _0x6,88
000262 940e 0884 	CALL SUBOPT_0x9
                 ; 0000 0068                         lcd_gotoxy(1,2);
                 ; 0000 0069                         lcd_puts("  ERROR    ERROR");
                +
000264 eca7     +LDI R26 , LOW ( _0x6 + ( 103 ) )
000265 e0b2     +LDI R27 , HIGH ( _0x6 + ( 103 ) )
                 	__POINTW2MN _0x6,103
000266 940e 05f3 	CALL _lcd_puts
                 ; 0000 006A                         RED = 1 ;
000268 9a96      	SBI  0x12,6
                 ; 0000 006B 
                 ; 0000 006C                 }
                 ; 0000 006D             }
                 _0x13:
                 ; 0000 006E             else if(id_chk == 0) // pass check
000269 c024      	RJMP _0x16
                 _0xA:
00026a fc25      	SBRC R2,5
00026b c022      	RJMP _0x17
                 ; 0000 006F             {
                 ; 0000 0070             error = 1 ;
00026c 9468      	SET
00026d f824      	BLD  R2,4
                 ; 0000 0071 
                 ; 0000 0072                     if(check == pass[log_id])
00026e 91e0 052c 	LDS  R30,_log_id
000270 91f0 052d 	LDS  R31,_log_id+1
000272 940e 088b 	CALL SUBOPT_0xA
000274 940e 0859 	CALL SUBOPT_0x5
000276 f451      	BRNE _0x18
                 ; 0000 0073                     {
                 ; 0000 0074                         id_chk = 0 ;
000277 940e 0868 	CALL SUBOPT_0x6
                 ; 0000 0075                         check = 0 ;
                 ; 0000 0076 
                 ; 0000 0077                         lcd_clear() ;
                 ; 0000 0078                         lcd_gotoxy(0,0);
                 ; 0000 0079                         lcd_puts("LOGED IN Succesfully");
                +
000279 eda8     +LDI R26 , LOW ( _0x6 + ( 120 ) )
00027a e0b2     +LDI R27 , HIGH ( _0x6 + ( 120 ) )
                 	__POINTW2MN _0x6,120
00027b 940e 05f3 	CALL _lcd_puts
                 ; 0000 007A                         break_mode = 1 ;
00027d 9468      	SET
00027e f823      	BLD  R2,3
                 ; 0000 007B                         error = 0 ;
00027f 940e 0874 	CALL SUBOPT_0x7
                 ; 0000 007C 
                 ; 0000 007D                         GREEN = 1 ;
                 ; 0000 007E                         delay_ms(500);
                 ; 0000 007F                         GREEN = 0 ;
                 ; 0000 0080                     }
                 ; 0000 0081 
                 ; 0000 0082                 if(error == 1)
                 _0x18:
000281 fe24      	SBRS R2,4
000282 c00b      	RJMP _0x1D
                 ; 0000 0083                 {
                 ; 0000 0084                         lcd_clear() ;
000283 940e 087d 	CALL SUBOPT_0x8
                 ; 0000 0085                         lcd_gotoxy(3,0);
                 ; 0000 0086                         lcd_puts("PASS INCORRECT");
                +
000285 eead     +LDI R26 , LOW ( _0x6 + ( 141 ) )
000286 e0b2     +LDI R27 , HIGH ( _0x6 + ( 141 ) )
                 	__POINTW2MN _0x6,141
000287 940e 0884 	CALL SUBOPT_0x9
                 ; 0000 0087                         lcd_gotoxy(1,2);
                 ; 0000 0088                         lcd_puts("  ERROR    ERROR");
                +
000289 efac     +LDI R26 , LOW ( _0x6 + ( 156 ) )
00028a e0b2     +LDI R27 , HIGH ( _0x6 + ( 156 ) )
                 	__POINTW2MN _0x6,156
00028b 940e 05f3 	CALL _lcd_puts
                 ; 0000 0089                         RED = 1 ;
00028d 9a96      	SBI  0x12,6
                 ; 0000 008A 
                 ; 0000 008B                 }
                 ; 0000 008C               }
                 _0x1D:
                 ; 0000 008D 
                 ; 0000 008E 
                 ; 0000 008F         }
                 _0x17:
                 _0x16:
                 _0x9:
                 _0x7:
                 ; 0000 0090         else if(x == 100)
00028e c05e      	RJMP _0x20
                 _0x4:
00028f e6e4      	LDI  R30,LOW(100)
000290 e0f0      	LDI  R31,HIGH(100)
000291 15e4      	CP   R30,R4
000292 05f5      	CPC  R31,R5
000293 f419      	BRNE _0x21
                 ; 0000 0091         {
                 ; 0000 0092             break_mode = 1;
000294 9468      	SET
000295 f823      	BLD  R2,3
                 ; 0000 0093         }
                 ; 0000 0094         else
000296 c056      	RJMP _0x22
                 _0x21:
                 ; 0000 0095         {
                 ; 0000 0096             lcd_gotoxy(pos_x,pos_y);
000297 926a      	ST   -Y,R6
000298 2da8      	MOV  R26,R8
000299 940e 0890 	CALL SUBOPT_0xB
                 ; 0000 0097             sprintf(c,"%d",x);
                +
00029b eeed     +LDI R30 , LOW ( 2 * _0x0 + ( 133 ) )
00029c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 133 ) )
                 	__POINTW1FN _0x0,133
00029d 940e 0897 	CALL SUBOPT_0xC
                 ; 0000 0098             lcd_puts(c);
00029f 940e 05f3 	CALL _lcd_puts
                 ; 0000 0099             pos_x++;
0002a1 01f3      	MOVW R30,R6
0002a2 9631      	ADIW R30,1
0002a3 013f      	MOVW R6,R30
                 ; 0000 009A 
                 ; 0000 009B             if(new_id == 1)
0002a4 fe21      	SBRS R2,1
0002a5 c013      	RJMP _0x23
                 ; 0000 009C             {
                 ; 0000 009D 
                 ; 0000 009E                 id[i] *= 10 ;
0002a6 01f5      	MOVW R30,R10
0002a7 940e 0854 	CALL SUBOPT_0x4
0002a9 0fea      	ADD  R30,R26
0002aa 1ffb      	ADC  R31,R27
0002ab 93ff      	PUSH R31
0002ac 93ef      	PUSH R30
0002ad 940e 08a5 	CALL SUBOPT_0xD
0002af 91af      	POP  R26
0002b0 91bf      	POP  R27
0002b1 940e 09b8 	CALL __PUTDP1
                 ; 0000 009F                 id[i] += x ;
0002b3 01f5      	MOVW R30,R10
0002b4 940e 0854 	CALL SUBOPT_0x4
0002b6 940e 08af 	CALL SUBOPT_0xE
                 ; 0000 00A0             }
                 ; 0000 00A1             else if(new_pass == 1)
0002b8 c034      	RJMP _0x24
                 _0x23:
0002b9 fe22      	SBRS R2,2
0002ba c013      	RJMP _0x25
                 ; 0000 00A2             {
                 ; 0000 00A3 
                 ; 0000 00A4                 pass[i] *= 10 ;
0002bb 01f5      	MOVW R30,R10
0002bc 940e 088b 	CALL SUBOPT_0xA
0002be 0fea      	ADD  R30,R26
0002bf 1ffb      	ADC  R31,R27
0002c0 93ff      	PUSH R31
0002c1 93ef      	PUSH R30
0002c2 940e 08a5 	CALL SUBOPT_0xD
0002c4 91af      	POP  R26
0002c5 91bf      	POP  R27
0002c6 940e 09b8 	CALL __PUTDP1
                 ; 0000 00A5                 pass[i] += x ;
0002c8 01f5      	MOVW R30,R10
0002c9 940e 088b 	CALL SUBOPT_0xA
0002cb 940e 08af 	CALL SUBOPT_0xE
                 ; 0000 00A6             }
                 ; 0000 00A7             else
0002cd c01f      	RJMP _0x26
                 _0x25:
                 ; 0000 00A8             {
                 ; 0000 00A9                 check *= 10 ;
0002ce 91e0 0592 	LDS  R30,_check
0002d0 91f0 0593 	LDS  R31,_check+1
0002d2 9160 0594 	LDS  R22,_check+2
0002d4 9170 0595 	LDS  R23,_check+3
                +
0002d6 e0aa     +LDI R26 , LOW ( 0xA )
0002d7 e0b0     +LDI R27 , HIGH ( 0xA )
0002d8 e080     +LDI R24 , BYTE3 ( 0xA )
0002d9 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
0002da 940e 0996 	CALL __MULD12
0002dc 940e 08c0 	CALL SUBOPT_0xF
                 ; 0000 00AA                 check += x ;
0002de 01f2      	MOVW R30,R4
0002df 91a0 0592 	LDS  R26,_check
0002e1 91b0 0593 	LDS  R27,_check+1
0002e3 9180 0594 	LDS  R24,_check+2
0002e5 9190 0595 	LDS  R25,_check+3
0002e7 940e 0971 	CALL __CWD1
0002e9 940e 095b 	CALL __ADDD12
0002eb 940e 08c0 	CALL SUBOPT_0xF
                 ; 0000 00AB             }
                 _0x26:
                 _0x24:
                 ; 0000 00AC         }
                 _0x22:
                 _0x20:
                 ; 0000 00AD     }
                 ; 0000 00AE 
                 ; 0000 00AF }
                 _0x3:
0002ed 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000260           	.BYTE 0xAD
                 ;
                 ;   void keyboard()
                 ; 0000 00B2         {
                 
                 	.CSEG
                 _keyboard:
                 ; .FSTART _keyboard
                 ; 0000 00B3 
                 ; 0000 00B4         ROW1 = 0 ;
0002ee 940e 08c9 	CALL SUBOPT_0x10
                 ; 0000 00B5         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 ; 0000 00B6         if(C1==0) x = 1  ,press = 1  ;
0002f0 999c      	SBIC 0x13,4
0002f1 c005      	RJMP _0x29
0002f2 e0e1      	LDI  R30,LOW(1)
0002f3 e0f0      	LDI  R31,HIGH(1)
0002f4 012f      	MOVW R4,R30
0002f5 9468      	SET
0002f6 f820      	BLD  R2,0
                 ; 0000 00B7         if(C2==0) x = 2  ,press = 1   ;
                 _0x29:
0002f7 999d      	SBIC 0x13,5
0002f8 c002      	RJMP _0x2A
0002f9 940e 08ce 	CALL SUBOPT_0x11
                 ; 0000 00B8         if(C3==0) x = 3  ,press = 1   ;
                 _0x2A:
0002fb 999e      	SBIC 0x13,6
0002fc c005      	RJMP _0x2B
0002fd e0e3      	LDI  R30,LOW(3)
0002fe e0f0      	LDI  R31,HIGH(3)
0002ff 012f      	MOVW R4,R30
000300 9468      	SET
000301 f820      	BLD  R2,0
                 ; 0000 00B9         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x2B:
000302 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00BA         ROW1 = 1 ;
000304 9aa8      	SBI  0x15,0
                 ; 0000 00BB show();
000305 df04      	RCALL _show
                 ; 0000 00BC         ROW2 = 0 ;
000306 98a9      	CBI  0x15,1
                 ; 0000 00BD         delay_ms(50);   // in normal we use 2ms but proteus can not detect
000307 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00BE         if(C1==0) x = 4   ,press = 1  ;
000309 999c      	SBIC 0x13,4
00030a c005      	RJMP _0x30
00030b e0e4      	LDI  R30,LOW(4)
00030c e0f0      	LDI  R31,HIGH(4)
00030d 012f      	MOVW R4,R30
00030e 9468      	SET
00030f f820      	BLD  R2,0
                 ; 0000 00BF         if(C2==0) x = 5   ,press = 1  ;
                 _0x30:
000310 999d      	SBIC 0x13,5
000311 c005      	RJMP _0x31
000312 e0e5      	LDI  R30,LOW(5)
000313 e0f0      	LDI  R31,HIGH(5)
000314 012f      	MOVW R4,R30
000315 9468      	SET
000316 f820      	BLD  R2,0
                 ; 0000 00C0         if(C3==0) x = 6   ,press = 1  ;
                 _0x31:
000317 999e      	SBIC 0x13,6
000318 c005      	RJMP _0x32
000319 e0e6      	LDI  R30,LOW(6)
00031a e0f0      	LDI  R31,HIGH(6)
00031b 012f      	MOVW R4,R30
00031c 9468      	SET
00031d f820      	BLD  R2,0
                 ; 0000 00C1         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x32:
00031e 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00C2         ROW2 = 1 ;
000320 9aa9      	SBI  0x15,1
                 ; 0000 00C3 show();
000321 dee8      	RCALL _show
                 ; 0000 00C4         ROW3 = 0 ;
000322 98aa      	CBI  0x15,2
                 ; 0000 00C5         delay_ms(50);   // in normal we use 2ms but proteus can not detect
000323 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00C6         if(C1==0) x = 7   ,press = 1  ;
000325 999c      	SBIC 0x13,4
000326 c005      	RJMP _0x37
000327 e0e7      	LDI  R30,LOW(7)
000328 e0f0      	LDI  R31,HIGH(7)
000329 012f      	MOVW R4,R30
00032a 9468      	SET
00032b f820      	BLD  R2,0
                 ; 0000 00C7         if(C2==0) x = 8   ,press = 1  ;
                 _0x37:
00032c 999d      	SBIC 0x13,5
00032d c005      	RJMP _0x38
00032e e0e8      	LDI  R30,LOW(8)
00032f e0f0      	LDI  R31,HIGH(8)
000330 012f      	MOVW R4,R30
000331 9468      	SET
000332 f820      	BLD  R2,0
                 ; 0000 00C8         if(C3==0) x = 9   ,press = 1  ;
                 _0x38:
000333 999e      	SBIC 0x13,6
000334 c005      	RJMP _0x39
000335 e0e9      	LDI  R30,LOW(9)
000336 e0f0      	LDI  R31,HIGH(9)
000337 012f      	MOVW R4,R30
000338 9468      	SET
000339 f820      	BLD  R2,0
                 ; 0000 00C9         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x39:
00033a 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00CA         ROW3 = 1 ;
00033c 9aaa      	SBI  0x15,2
                 ; 0000 00CB show();
00033d decc      	RCALL _show
                 ; 0000 00CC         ROW4 = 0 ;
00033e 98ab      	CBI  0x15,3
                 ; 0000 00CD         delay_ms(50);   // in normal we use 2ms but proteus can not detect
00033f 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00CE         if(C1==0) x = 100  ,press = 1   ;
000341 999c      	SBIC 0x13,4
000342 c005      	RJMP _0x3E
000343 e6e4      	LDI  R30,LOW(100)
000344 e0f0      	LDI  R31,HIGH(100)
000345 012f      	MOVW R4,R30
000346 9468      	SET
000347 f820      	BLD  R2,0
                 ; 0000 00CF         if(C2==0) x = 0    ,press = 1 ;
                 _0x3E:
000348 999d      	SBIC 0x13,5
000349 c004      	RJMP _0x3F
00034a 2444      	CLR  R4
00034b 2455      	CLR  R5
00034c 9468      	SET
00034d f820      	BLD  R2,0
                 ; 0000 00D0         if(C3==0) x = 200  ,press = 1   ;
                 _0x3F:
00034e 999e      	SBIC 0x13,6
00034f c005      	RJMP _0x40
000350 ece8      	LDI  R30,LOW(200)
000351 e0f0      	LDI  R31,HIGH(200)
000352 012f      	MOVW R4,R30
000353 9468      	SET
000354 f820      	BLD  R2,0
                 ; 0000 00D1         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x40:
000355 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 00D2         ROW4 = 1 ;
000357 9aab      	SBI  0x15,3
                 ; 0000 00D3 show();
000358 deb1      	RCALL _show
                 ; 0000 00D4         }
000359 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 00D8 {
                 _main:
                 ; .FSTART _main
                 ; 0000 00D9 
                 ; 0000 00DA // USART initialization
                 ; 0000 00DB // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 00DC // USART Receiver: On
                 ; 0000 00DD // USART Transmitter: On
                 ; 0000 00DE // USART Mode: Asynchronous
                 ; 0000 00DF // USART Baud Rate: 9600
                 ; 0000 00E0 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
00035a e0e0      	LDI  R30,LOW(0)
00035b b9eb      	OUT  0xB,R30
                 ; 0000 00E1 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
00035c e1e8      	LDI  R30,LOW(24)
00035d b9ea      	OUT  0xA,R30
                 ; 0000 00E2 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
00035e e8e6      	LDI  R30,LOW(134)
00035f bde0      	OUT  0x20,R30
                 ; 0000 00E3 UBRRH=0x00;
000360 e0e0      	LDI  R30,LOW(0)
000361 bde0      	OUT  0x20,R30
                 ; 0000 00E4 UBRRL=0x33;
000362 e3e3      	LDI  R30,LOW(51)
000363 b9e9      	OUT  0x9,R30
                 ; 0000 00E5 
                 ; 0000 00E6 DDRC = 0X0F ;
000364 e0ef      	LDI  R30,LOW(15)
000365 bbe4      	OUT  0x14,R30
                 ; 0000 00E7 DDRD = 0XC0 ;
000366 ece0      	LDI  R30,LOW(192)
000367 bbe1      	OUT  0x11,R30
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA lcd_init(20);
000368 e1a4      	LDI  R26,LOW(20)
000369 940e 05fe 	CALL _lcd_init
                 ; 0000 00EB 
                 ; 0000 00EC lcd_gotoxy(1,0);
00036b 940e 08d8 	CALL SUBOPT_0x13
                 ; 0000 00ED lcd_puts("Enter ID to SIGN UP ");
                +
00036d e0ad     +LDI R26 , LOW ( _0x43 + ( 0 ) )
00036e e0b3     +LDI R27 , HIGH ( _0x43 + ( 0 ) )
                 	__POINTW2MN _0x43,0
00036f 940e 083d 	CALL SUBOPT_0x1
                 ; 0000 00EE lcd_gotoxy(1,1);
                 ; 0000 00EF lcd_puts("  Then Press <#> ");
                +
000371 e2a2     +LDI R26 , LOW ( _0x43 + ( 21 ) )
000372 e0b3     +LDI R27 , HIGH ( _0x43 + ( 21 ) )
                 	__POINTW2MN _0x43,21
000373 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 00F0 
                 ; 0000 00F1 lcd_gotoxy(0,3);
                 ; 0000 00F2 lcd_puts("==> ");
                +
000375 e3a4     +LDI R26 , LOW ( _0x43 + ( 39 ) )
000376 e0b3     +LDI R27 , HIGH ( _0x43 + ( 39 ) )
                 	__POINTW2MN _0x43,39
000377 940e 084b 	CALL SUBOPT_0x3
                 ; 0000 00F3 
                 ; 0000 00F4     pos_x = 4 ;
                 ; 0000 00F5     pos_y = 3 ;
                 ; 0000 00F6     new_id = 1 ;
000379 9468      	SET
00037a f821      	BLD  R2,1
                 ; 0000 00F7 while (1)
                 _0x44:
                 ; 0000 00F8       {
                 ; 0000 00F9         keyboard();
00037b df72      	RCALL _keyboard
                 ; 0000 00FA 
                 ; 0000 00FB         if(break_mode == 1)
00037c fe23      	SBRS R2,3
00037d c003      	RJMP _0x47
                 ; 0000 00FC         {
                 ; 0000 00FD         break_mode = 0 ;
00037e 94e8      	CLT
00037f f823      	BLD  R2,3
                 ; 0000 00FE         break ;
000380 c001      	RJMP _0x46
                 ; 0000 00FF         }
                 ; 0000 0100 
                 ; 0000 0101       }
                 _0x47:
000381 cff9      	RJMP _0x44
                 _0x46:
                 ; 0000 0102 
                 ; 0000 0103 start :
                 _0x48:
                 ; 0000 0104 
                 ; 0000 0105 lcd_gotoxy(1,0);
000382 940e 08d8 	CALL SUBOPT_0x13
                 ; 0000 0106 lcd_puts("Enter ID to log in ");
                +
000384 e3a9     +LDI R26 , LOW ( _0x43 + ( 44 ) )
000385 e0b3     +LDI R27 , HIGH ( _0x43 + ( 44 ) )
                 	__POINTW2MN _0x43,44
000386 940e 083d 	CALL SUBOPT_0x1
                 ; 0000 0107 lcd_gotoxy(1,1);
                 ; 0000 0108 lcd_puts("  Then Press <#> ");
                +
000388 e4ad     +LDI R26 , LOW ( _0x43 + ( 64 ) )
000389 e0b3     +LDI R27 , HIGH ( _0x43 + ( 64 ) )
                 	__POINTW2MN _0x43,64
00038a 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0109 
                 ; 0000 010A lcd_gotoxy(0,3);
                 ; 0000 010B lcd_puts("==> ");
                +
00038c e5af     +LDI R26 , LOW ( _0x43 + ( 82 ) )
00038d e0b3     +LDI R27 , HIGH ( _0x43 + ( 82 ) )
                 	__POINTW2MN _0x43,82
00038e 940e 084b 	CALL SUBOPT_0x3
                 ; 0000 010C     pos_x = 4 ;
                 ; 0000 010D     pos_y = 3 ;
                 ; 0000 010E     id_chk = 1 ;
000390 9468      	SET
000391 f825      	BLD  R2,5
                 ; 0000 010F 
                 ; 0000 0110 while (1)
                 _0x49:
                 ; 0000 0111       {
                 ; 0000 0112         keyboard();
000392 df5b      	RCALL _keyboard
                 ; 0000 0113 
                 ; 0000 0114         if(break_mode == 1)
000393 fe23      	SBRS R2,3
000394 c003      	RJMP _0x4C
                 ; 0000 0115         {
                 ; 0000 0116         break_mode = 0 ;
000395 94e8      	CLT
000396 f823      	BLD  R2,3
                 ; 0000 0117         break ;
000397 c001      	RJMP _0x4B
                 ; 0000 0118         }
                 ; 0000 0119 
                 ; 0000 011A       }
                 _0x4C:
000398 cff9      	RJMP _0x49
                 _0x4B:
                 ; 0000 011B 
                 ; 0000 011C delay_ms(500);
000399 efa4      	LDI  R26,LOW(500)
00039a e0b1      	LDI  R27,HIGH(500)
00039b 940e 094d 	CALL _delay_ms
                 ; 0000 011D lcd_clear();
00039d 940e 05c3 	CALL _lcd_clear
                 ; 0000 011E 
                 ; 0000 011F 
                 ; 0000 0120 while(1)
                 _0x4D:
                 ; 0000 0121 {
                 ; 0000 0122         lcd_clear();
00039f 940e 05c3 	CALL _lcd_clear
                 ; 0000 0123         if(log_id == 0)
0003a1 91e0 052c 	LDS  R30,_log_id
0003a3 91f0 052d 	LDS  R31,_log_id+1
0003a5 9730      	SBIW R30,0
0003a6 f4b9      	BRNE _0x50
                 ; 0000 0124         {
                 ; 0000 0125             lcd_gotoxy(0,0);
0003a7 940e 08dd 	CALL SUBOPT_0x14
                 ; 0000 0126             lcd_puts("LOGED IN AS : ADMIN");
                +
0003a9 e6a4     +LDI R26 , LOW ( _0x43 + ( 87 ) )
0003aa e0b3     +LDI R27 , HIGH ( _0x43 + ( 87 ) )
                 	__POINTW2MN _0x43,87
0003ab 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0127                 lcd_gotoxy(0,1);
0003ad e0a1      	LDI  R26,LOW(1)
0003ae 940e 05b2 	CALL _lcd_gotoxy
                 ; 0000 0128             lcd_puts("1- ADD USER");
                +
0003b0 e7a8     +LDI R26 , LOW ( _0x43 + ( 107 ) )
0003b1 e0b3     +LDI R27 , HIGH ( _0x43 + ( 107 ) )
                 	__POINTW2MN _0x43,107
0003b2 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0129                 lcd_gotoxy(0,2);
0003b4 e0a2      	LDI  R26,LOW(2)
0003b5 940e 05b2 	CALL _lcd_gotoxy
                 ; 0000 012A             lcd_puts("2- SET TIME / DATE ");
                +
0003b7 e8a4     +LDI R26 , LOW ( _0x43 + ( 119 ) )
0003b8 e0b3     +LDI R27 , HIGH ( _0x43 + ( 119 ) )
                 	__POINTW2MN _0x43,119
0003b9 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 012B                 lcd_gotoxy(0,3);
                 ; 0000 012C             lcd_puts("3- LOG OUT");
                +
0003bb e9a8     +LDI R26 , LOW ( _0x43 + ( 139 ) )
0003bc e0b3     +LDI R27 , HIGH ( _0x43 + ( 139 ) )
                 	__POINTW2MN _0x43,139
0003bd c016      	RJMP _0x9B
                 ; 0000 012D         }
                 ; 0000 012E         else
                 _0x50:
                 ; 0000 012F         {
                 ; 0000 0130             lcd_gotoxy(0,0);
0003be 940e 08dd 	CALL SUBOPT_0x14
                 ; 0000 0131             lcd_puts("LOGED IN AS : USER");
                +
0003c0 eaa3     +LDI R26 , LOW ( _0x43 + ( 150 ) )
0003c1 e0b3     +LDI R27 , HIGH ( _0x43 + ( 150 ) )
                 	__POINTW2MN _0x43,150
0003c2 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0132 
                 ; 0000 0133                 lcd_gotoxy(0,1);
0003c4 e0a1      	LDI  R26,LOW(1)
0003c5 940e 05b2 	CALL _lcd_gotoxy
                 ; 0000 0134             lcd_puts("1- CHECK DATE/TIME");
                +
0003c7 eba6     +LDI R26 , LOW ( _0x43 + ( 169 ) )
0003c8 e0b3     +LDI R27 , HIGH ( _0x43 + ( 169 ) )
                 	__POINTW2MN _0x43,169
0003c9 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0135                 lcd_gotoxy(0,2);
0003cb e0a2      	LDI  R26,LOW(2)
0003cc 940e 05b2 	CALL _lcd_gotoxy
                 ; 0000 0136             lcd_puts("2- TEMPERATURE ");
                +
0003ce eca9     +LDI R26 , LOW ( _0x43 + ( 188 ) )
0003cf e0b3     +LDI R27 , HIGH ( _0x43 + ( 188 ) )
                 	__POINTW2MN _0x43,188
0003d0 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0137                 lcd_gotoxy(0,3);
                 ; 0000 0138             lcd_puts("3- STEP MOTOR");
                +
0003d2 eda9     +LDI R26 , LOW ( _0x43 + ( 204 ) )
0003d3 e0b3     +LDI R27 , HIGH ( _0x43 + ( 204 ) )
                 	__POINTW2MN _0x43,204
                 _0x9B:
0003d4 940e 05f3 	CALL _lcd_puts
                 ; 0000 0139         }
                 ; 0000 013A         while(1)
                 _0x52:
                 ; 0000 013B         {
                 ; 0000 013C         ROW1 = 0 ;
0003d6 940e 08c9 	CALL SUBOPT_0x10
                 ; 0000 013D         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 ; 0000 013E         if(C1==0) x = 1  ,press = 1  ;
0003d8 999c      	SBIC 0x13,4
0003d9 c005      	RJMP _0x57
0003da e0e1      	LDI  R30,LOW(1)
0003db e0f0      	LDI  R31,HIGH(1)
0003dc 012f      	MOVW R4,R30
0003dd 9468      	SET
0003de f820      	BLD  R2,0
                 ; 0000 013F         if(C2==0) x = 2  ,press = 1   ;
                 _0x57:
0003df 999d      	SBIC 0x13,5
0003e0 c002      	RJMP _0x58
0003e1 940e 08ce 	CALL SUBOPT_0x11
                 ; 0000 0140         if(C3==0) x = 3  ,press = 1   ;
                 _0x58:
0003e3 999e      	SBIC 0x13,6
0003e4 c005      	RJMP _0x59
0003e5 e0e3      	LDI  R30,LOW(3)
0003e6 e0f0      	LDI  R31,HIGH(3)
0003e7 012f      	MOVW R4,R30
0003e8 9468      	SET
0003e9 f820      	BLD  R2,0
                 ; 0000 0141         delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x59:
0003ea 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 0142         ROW1 = 1 ;
0003ec 9aa8      	SBI  0x15,0
                 ; 0000 0143 
                 ; 0000 0144         if(press == 1)
0003ed fc20      	SBRC R2,0
                 ; 0000 0145         {
                 ; 0000 0146           break ;
0003ee c001      	RJMP _0x54
                 ; 0000 0147         }
                 ; 0000 0148         }
0003ef cfe6      	RJMP _0x52
                 _0x54:
                 ; 0000 0149 
                 ; 0000 014A press = 0 ;
0003f0 94e8      	CLT
0003f1 f820      	BLD  R2,0
                 ; 0000 014B delay_ms(500);
0003f2 efa4      	LDI  R26,LOW(500)
0003f3 e0b1      	LDI  R27,HIGH(500)
0003f4 940e 094d 	CALL _delay_ms
                 ; 0000 014C         if(log_id == 0 && x == 1)
0003f6 940e 08e7 	CALL SUBOPT_0x16
0003f8 f429      	BRNE _0x5E
0003f9 e0e1      	LDI  R30,LOW(1)
0003fa e0f0      	LDI  R31,HIGH(1)
0003fb 15e4      	CP   R30,R4
0003fc 05f5      	CPC  R31,R5
0003fd f009      	BREQ _0x5F
                 _0x5E:
0003fe c01a      	RJMP _0x5D
                 _0x5F:
                 ; 0000 014D         {
                 ; 0000 014E             lcd_clear();
0003ff 940e 05c3 	CALL _lcd_clear
                 ; 0000 014F             lcd_gotoxy(1,0);
000401 940e 08d8 	CALL SUBOPT_0x13
                 ; 0000 0150             lcd_puts("Enter ID to SIGN UP ");
                +
000403 eea7     +LDI R26 , LOW ( _0x43 + ( 218 ) )
000404 e0b3     +LDI R27 , HIGH ( _0x43 + ( 218 ) )
                 	__POINTW2MN _0x43,218
000405 940e 083d 	CALL SUBOPT_0x1
                 ; 0000 0151             lcd_gotoxy(1,1);
                 ; 0000 0152             lcd_puts("  Then Press <#> ");
                +
000407 efac     +LDI R26 , LOW ( _0x43 + ( 239 ) )
000408 e0b3     +LDI R27 , HIGH ( _0x43 + ( 239 ) )
                 	__POINTW2MN _0x43,239
000409 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0153 
                 ; 0000 0154             lcd_gotoxy(0,3);
                 ; 0000 0155             lcd_puts("==> ");
                +
00040b e0ae     +LDI R26 , LOW ( _0x43 + ( 257 ) )
00040c e0b4     +LDI R27 , HIGH ( _0x43 + ( 257 ) )
                 	__POINTW2MN _0x43,257
00040d 940e 084b 	CALL SUBOPT_0x3
                 ; 0000 0156 
                 ; 0000 0157                 pos_x = 4 ;
                 ; 0000 0158                 pos_y = 3 ;
                 ; 0000 0159                 new_id =1 ;
00040f 9468      	SET
000410 f821      	BLD  R2,1
                 ; 0000 015A 
                 ; 0000 015B            while(1)
                 _0x60:
                 ; 0000 015C            {
                 ; 0000 015D                 keyboard();
000411 dedc      	RCALL _keyboard
                 ; 0000 015E 
                 ; 0000 015F                         if(break_mode == 1)
000412 fe23      	SBRS R2,3
000413 c003      	RJMP _0x63
                 ; 0000 0160                     {
                 ; 0000 0161                     break_mode = 0 ;
000414 94e8      	CLT
000415 f823      	BLD  R2,3
                 ; 0000 0162                     break ;
000416 c001      	RJMP _0x62
                 ; 0000 0163                     }
                 ; 0000 0164            }
                 _0x63:
000417 cff9      	RJMP _0x60
                 _0x62:
                 ; 0000 0165 
                 ; 0000 0166                    goto start ;
000418 cf69      	RJMP _0x48
                 ; 0000 0167         }
                 ; 0000 0168 
                 ; 0000 0169         if(log_id == 0 && x == 2)
                 _0x5D:
000419 940e 08e7 	CALL SUBOPT_0x16
00041b f429      	BRNE _0x65
00041c e0e2      	LDI  R30,LOW(2)
00041d e0f0      	LDI  R31,HIGH(2)
00041e 15e4      	CP   R30,R4
00041f 05f5      	CPC  R31,R5
000420 f009      	BREQ _0x66
                 _0x65:
000421 c099      	RJMP _0x64
                 _0x66:
                 ; 0000 016A         {
                 ; 0000 016B         lcd_clear();
000422 d1a0      	RCALL _lcd_clear
                 ; 0000 016C         new_id = 0 ;
000423 94e8      	CLT
000424 f821      	BLD  R2,1
                 ; 0000 016D         new_pass = 0 ;
000425 f822      	BLD  R2,2
                 ; 0000 016E         lcd_gotoxy(0,0);
000426 940e 08dd 	CALL SUBOPT_0x14
                 ; 0000 016F         lcd_puts("To SET press <*> ");
                +
000428 e1a3     +LDI R26 , LOW ( _0x43 + ( 262 ) )
000429 e0b4     +LDI R27 , HIGH ( _0x43 + ( 262 ) )
                 	__POINTW2MN _0x43,262
00042a 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0170         lcd_gotoxy(0,1);
00042c e0a1      	LDI  R26,LOW(1)
00042d d184      	RCALL _lcd_gotoxy
                 ; 0000 0171         lcd_puts("Enter Year : ");
                +
00042e e2a5     +LDI R26 , LOW ( _0x43 + ( 280 ) )
00042f e0b4     +LDI R27 , HIGH ( _0x43 + ( 280 ) )
                 	__POINTW2MN _0x43,280
000430 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0172         lcd_gotoxy(0,3);
                 ; 0000 0173         lcd_puts("==> ");
                +
000432 e3a3     +LDI R26 , LOW ( _0x43 + ( 294 ) )
000433 e0b4     +LDI R27 , HIGH ( _0x43 + ( 294 ) )
                 	__POINTW2MN _0x43,294
000434 d1be      	RCALL _lcd_puts
                 ; 0000 0174 
                 ; 0000 0175             while(1)
                 _0x67:
                 ; 0000 0176             {
                 ; 0000 0177                 keyboard();
000435 deb8      	RCALL _keyboard
                 ; 0000 0178                 if(break_mode == 1)
000436 fe23      	SBRS R2,3
000437 c003      	RJMP _0x6A
                 ; 0000 0179                 {
                 ; 0000 017A                 break_mode = 0 ;
000438 94e8      	CLT
000439 f823      	BLD  R2,3
                 ; 0000 017B                 break ;
00043a c001      	RJMP _0x69
                 ; 0000 017C                 }
                 ; 0000 017D             }
                 _0x6A:
00043b cff9      	RJMP _0x67
                 _0x69:
                 ; 0000 017E             year = check ;
00043c 940e 08ed 	CALL SUBOPT_0x17
00043e 93e0 0596 	STS  _year,R30
000440 93f0 0597 	STS  _year+1,R31
                 ; 0000 017F             check = 0 ;
000442 940e 08f2 	CALL SUBOPT_0x18
                 ; 0000 0180             lcd_clear();
                 ; 0000 0181         lcd_gotoxy(0,0);
                 ; 0000 0182         lcd_puts("To SET press <*> ");
                +
000444 e3a8     +LDI R26 , LOW ( _0x43 + ( 299 ) )
000445 e0b4     +LDI R27 , HIGH ( _0x43 + ( 299 ) )
                 	__POINTW2MN _0x43,299
000446 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0183         lcd_gotoxy(0,1);
000448 e0a1      	LDI  R26,LOW(1)
000449 d168      	RCALL _lcd_gotoxy
                 ; 0000 0184         lcd_puts("Enter mount : ");
                +
00044a e4aa     +LDI R26 , LOW ( _0x43 + ( 317 ) )
00044b e0b4     +LDI R27 , HIGH ( _0x43 + ( 317 ) )
                 	__POINTW2MN _0x43,317
00044c 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0185         lcd_gotoxy(0,3);
                 ; 0000 0186         lcd_puts("==> ");
                +
00044e e5a9     +LDI R26 , LOW ( _0x43 + ( 332 ) )
00044f e0b4     +LDI R27 , HIGH ( _0x43 + ( 332 ) )
                 	__POINTW2MN _0x43,332
000450 d1a2      	RCALL _lcd_puts
                 ; 0000 0187 
                 ; 0000 0188             while(1)
                 _0x6B:
                 ; 0000 0189             {
                 ; 0000 018A                 keyboard();
000451 de9c      	RCALL _keyboard
                 ; 0000 018B                 if(break_mode == 1)
000452 fe23      	SBRS R2,3
000453 c003      	RJMP _0x6E
                 ; 0000 018C                 {
                 ; 0000 018D                 break_mode = 0 ;
000454 94e8      	CLT
000455 f823      	BLD  R2,3
                 ; 0000 018E                 break ;
000456 c001      	RJMP _0x6D
                 ; 0000 018F                 }
                 ; 0000 0190             }
                 _0x6E:
000457 cff9      	RJMP _0x6B
                 _0x6D:
                 ; 0000 0191             mounth = check ;
000458 940e 08ed 	CALL SUBOPT_0x17
00045a 93e0 0598 	STS  _mounth,R30
00045c 93f0 0599 	STS  _mounth+1,R31
                 ; 0000 0192             check = 0 ;
00045e 940e 08f2 	CALL SUBOPT_0x18
                 ; 0000 0193             lcd_clear();
                 ; 0000 0194         lcd_gotoxy(0,0);
                 ; 0000 0195         lcd_puts("To SET press <*> ");
                +
000460 e5ae     +LDI R26 , LOW ( _0x43 + ( 337 ) )
000461 e0b4     +LDI R27 , HIGH ( _0x43 + ( 337 ) )
                 	__POINTW2MN _0x43,337
000462 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 0196             lcd_gotoxy(0,1);
000464 e0a1      	LDI  R26,LOW(1)
000465 d14c      	RCALL _lcd_gotoxy
                 ; 0000 0197             lcd_puts("Enter day : ");
                +
000466 e7a0     +LDI R26 , LOW ( _0x43 + ( 355 ) )
000467 e0b4     +LDI R27 , HIGH ( _0x43 + ( 355 ) )
                 	__POINTW2MN _0x43,355
000468 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 0198             lcd_gotoxy(0,3);
                 ; 0000 0199             lcd_puts("==> ");
                +
00046a e7ad     +LDI R26 , LOW ( _0x43 + ( 368 ) )
00046b e0b4     +LDI R27 , HIGH ( _0x43 + ( 368 ) )
                 	__POINTW2MN _0x43,368
00046c d186      	RCALL _lcd_puts
                 ; 0000 019A 
                 ; 0000 019B             while(1)
                 _0x6F:
                 ; 0000 019C             {
                 ; 0000 019D                 keyboard();
00046d de80      	RCALL _keyboard
                 ; 0000 019E                 if(break_mode == 1)
00046e fe23      	SBRS R2,3
00046f c003      	RJMP _0x72
                 ; 0000 019F                 {
                 ; 0000 01A0                 break_mode = 0 ;
000470 94e8      	CLT
000471 f823      	BLD  R2,3
                 ; 0000 01A1                 break ;
000472 c001      	RJMP _0x71
                 ; 0000 01A2                 }
                 ; 0000 01A3             }
                 _0x72:
000473 cff9      	RJMP _0x6F
                 _0x71:
                 ; 0000 01A4             day = check ;
000474 940e 08ed 	CALL SUBOPT_0x17
000476 93e0 059a 	STS  _day,R30
000478 93f0 059b 	STS  _day+1,R31
                 ; 0000 01A5             check = 0 ;
00047a 940e 08f2 	CALL SUBOPT_0x18
                 ; 0000 01A6             lcd_clear();
                 ; 0000 01A7         lcd_gotoxy(0,0);
                 ; 0000 01A8         lcd_puts("To SET press <*> ");
                +
00047c e8a2     +LDI R26 , LOW ( _0x43 + ( 373 ) )
00047d e0b4     +LDI R27 , HIGH ( _0x43 + ( 373 ) )
                 	__POINTW2MN _0x43,373
00047e 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 01A9             lcd_gotoxy(0,1);
000480 e0a1      	LDI  R26,LOW(1)
000481 d130      	RCALL _lcd_gotoxy
                 ; 0000 01AA             lcd_puts("Enter hour : ");
                +
000482 e9a4     +LDI R26 , LOW ( _0x43 + ( 391 ) )
000483 e0b4     +LDI R27 , HIGH ( _0x43 + ( 391 ) )
                 	__POINTW2MN _0x43,391
000484 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 01AB             lcd_gotoxy(0,3);
                 ; 0000 01AC             lcd_puts("==> ");
                +
000486 eaa2     +LDI R26 , LOW ( _0x43 + ( 405 ) )
000487 e0b4     +LDI R27 , HIGH ( _0x43 + ( 405 ) )
                 	__POINTW2MN _0x43,405
000488 d16a      	RCALL _lcd_puts
                 ; 0000 01AD 
                 ; 0000 01AE             while(1)
                 _0x73:
                 ; 0000 01AF             {
                 ; 0000 01B0                 keyboard();
000489 de64      	RCALL _keyboard
                 ; 0000 01B1                 if(break_mode == 1)
00048a fe23      	SBRS R2,3
00048b c003      	RJMP _0x76
                 ; 0000 01B2                 {
                 ; 0000 01B3                 break_mode = 0 ;
00048c 94e8      	CLT
00048d f823      	BLD  R2,3
                 ; 0000 01B4                 break ;
00048e c001      	RJMP _0x75
                 ; 0000 01B5                 }
                 ; 0000 01B6             }
                 _0x76:
00048f cff9      	RJMP _0x73
                 _0x75:
                 ; 0000 01B7             hour = check ;
000490 940e 08ed 	CALL SUBOPT_0x17
000492 93e0 059c 	STS  _hour,R30
000494 93f0 059d 	STS  _hour+1,R31
                 ; 0000 01B8             check = 0 ;
000496 940e 08f2 	CALL SUBOPT_0x18
                 ; 0000 01B9             lcd_clear();
                 ; 0000 01BA         lcd_gotoxy(0,0);
                 ; 0000 01BB         lcd_puts("To SET press <*> ");
                +
000498 eaa7     +LDI R26 , LOW ( _0x43 + ( 410 ) )
000499 e0b4     +LDI R27 , HIGH ( _0x43 + ( 410 ) )
                 	__POINTW2MN _0x43,410
00049a 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 01BC             lcd_gotoxy(0,1);
00049c e0a1      	LDI  R26,LOW(1)
00049d d114      	RCALL _lcd_gotoxy
                 ; 0000 01BD             lcd_puts("Enter minute : ");
                +
00049e eba9     +LDI R26 , LOW ( _0x43 + ( 428 ) )
00049f e0b4     +LDI R27 , HIGH ( _0x43 + ( 428 ) )
                 	__POINTW2MN _0x43,428
0004a0 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 01BE             lcd_gotoxy(0,3);
                 ; 0000 01BF             lcd_puts("==> ");
                +
0004a2 eca9     +LDI R26 , LOW ( _0x43 + ( 444 ) )
0004a3 e0b4     +LDI R27 , HIGH ( _0x43 + ( 444 ) )
                 	__POINTW2MN _0x43,444
0004a4 d14e      	RCALL _lcd_puts
                 ; 0000 01C0 
                 ; 0000 01C1             while(1)
                 _0x77:
                 ; 0000 01C2             {
                 ; 0000 01C3                 keyboard();
0004a5 de48      	RCALL _keyboard
                 ; 0000 01C4                 if(break_mode == 1)
0004a6 fe23      	SBRS R2,3
0004a7 c003      	RJMP _0x7A
                 ; 0000 01C5                 {
                 ; 0000 01C6                 break_mode = 0 ;
0004a8 94e8      	CLT
0004a9 f823      	BLD  R2,3
                 ; 0000 01C7                 break ;
0004aa c001      	RJMP _0x79
                 ; 0000 01C8                 }
                 ; 0000 01C9             }
                 _0x7A:
0004ab cff9      	RJMP _0x77
                 _0x79:
                 ; 0000 01CA             minute = check ;
0004ac 940e 08ed 	CALL SUBOPT_0x17
0004ae 93e0 059e 	STS  _minute,R30
0004b0 93f0 059f 	STS  _minute+1,R31
                 ; 0000 01CB             check = 0 ;
0004b2 e0e0      	LDI  R30,LOW(0)
0004b3 93e0 0592 	STS  _check,R30
0004b5 93e0 0593 	STS  _check+1,R30
0004b7 93e0 0594 	STS  _check+2,R30
0004b9 93e0 0595 	STS  _check+3,R30
                 ; 0000 01CC         }
                 ; 0000 01CD 
                 ; 0000 01CE         if(log_id == 0 && x == 3)
                 _0x64:
0004bb 940e 08e7 	CALL SUBOPT_0x16
0004bd f429      	BRNE _0x7C
0004be e0e3      	LDI  R30,LOW(3)
0004bf e0f0      	LDI  R31,HIGH(3)
0004c0 15e4      	CP   R30,R4
0004c1 05f5      	CPC  R31,R5
0004c2 f009      	BREQ _0x7D
                 _0x7C:
0004c3 c002      	RJMP _0x7B
                 _0x7D:
                 ; 0000 01CF         {
                 ; 0000 01D0             lcd_clear();
0004c4 d0fe      	RCALL _lcd_clear
                 ; 0000 01D1             goto start ;
0004c5 cebc      	RJMP _0x48
                 ; 0000 01D2         }
                 ; 0000 01D3 
                 ; 0000 01D4         if(log_id == 1 && x == 1)
                 _0x7B:
0004c6 940e 08fc 	CALL SUBOPT_0x19
0004c8 f429      	BRNE _0x7F
0004c9 e0e1      	LDI  R30,LOW(1)
0004ca e0f0      	LDI  R31,HIGH(1)
0004cb 15e4      	CP   R30,R4
0004cc 05f5      	CPC  R31,R5
0004cd f009      	BREQ _0x80
                 _0x7F:
0004ce c04d      	RJMP _0x7E
                 _0x80:
                 ; 0000 01D5         {
                 ; 0000 01D6             lcd_clear();
0004cf 940e 0836 	CALL SUBOPT_0x0
                 ; 0000 01D7 
                 ; 0000 01D8             lcd_gotoxy(0,0);
                 ; 0000 01D9             lcd_puts( "     << DATE >>    ");
                +
0004d1 ecae     +LDI R26 , LOW ( _0x43 + ( 449 ) )
0004d2 e0b4     +LDI R27 , HIGH ( _0x43 + ( 449 ) )
                 	__POINTW2MN _0x43,449
0004d3 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 01DA 
                 ; 0000 01DB                 lcd_gotoxy(0,1);
0004d5 e0a1      	LDI  R26,LOW(1)
0004d6 940e 0890 	CALL SUBOPT_0xB
                 ; 0000 01DC             sprintf(c,"      %d / %d / %d ",year , mounth , day);
                +
0004d8 e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 418 ) )
0004d9 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 418 ) )
                 	__POINTW1FN _0x0,418
0004da 93fa      	ST   -Y,R31
0004db 93ea      	ST   -Y,R30
0004dc 91e0 0596 	LDS  R30,_year
0004de 91f0 0597 	LDS  R31,_year+1
0004e0 940e 0902 	CALL SUBOPT_0x1A
0004e2 91e0 0598 	LDS  R30,_mounth
0004e4 91f0 0599 	LDS  R31,_mounth+1
0004e6 940e 0902 	CALL SUBOPT_0x1A
0004e8 91e0 059a 	LDS  R30,_day
0004ea 91f0 059b 	LDS  R31,_day+1
0004ec 940e 0902 	CALL SUBOPT_0x1A
0004ee e08c      	LDI  R24,12
0004ef 940e 07e9 	CALL _sprintf
0004f1 9660      	ADIW R28,16
                 ; 0000 01DD             lcd_puts(c);
0004f2 e2ae      	LDI  R26,LOW(_c)
0004f3 e0b5      	LDI  R27,HIGH(_c)
0004f4 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 01DE                 lcd_gotoxy(0,2);
0004f6 e0a2      	LDI  R26,LOW(2)
0004f7 d0ba      	RCALL _lcd_gotoxy
                 ; 0000 01DF             lcd_puts( "     << TIME >>    ");
                +
0004f8 eea2     +LDI R26 , LOW ( _0x43 + ( 469 ) )
0004f9 e0b4     +LDI R27 , HIGH ( _0x43 + ( 469 ) )
                 	__POINTW2MN _0x43,469
0004fa 940e 0844 	CALL SUBOPT_0x2
                 ; 0000 01E0                 lcd_gotoxy(0,3);
                 ; 0000 01E1             sprintf(c,"       %d : %d     ",hour , minute);
0004fc e2ee      	LDI  R30,LOW(_c)
0004fd e0f5      	LDI  R31,HIGH(_c)
0004fe 93fa      	ST   -Y,R31
0004ff 93ea      	ST   -Y,R30
                +
000500 e3e2     +LDI R30 , LOW ( 2 * _0x0 + ( 458 ) )
000501 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 458 ) )
                 	__POINTW1FN _0x0,458
000502 93fa      	ST   -Y,R31
000503 93ea      	ST   -Y,R30
000504 91e0 059c 	LDS  R30,_hour
000506 91f0 059d 	LDS  R31,_hour+1
000508 940e 0902 	CALL SUBOPT_0x1A
00050a 91e0 059e 	LDS  R30,_minute
00050c 91f0 059f 	LDS  R31,_minute+1
00050e 940e 0902 	CALL SUBOPT_0x1A
000510 e088      	LDI  R24,8
000511 940e 07e9 	CALL _sprintf
000513 962c      	ADIW R28,12
                 ; 0000 01E2             lcd_puts(c);
000514 940e 0907 	CALL SUBOPT_0x1B
                 ; 0000 01E3 
                 ; 0000 01E4             delay_ms(5000);
000516 e8a8      	LDI  R26,LOW(5000)
000517 e1b3      	LDI  R27,HIGH(5000)
000518 940e 094d 	CALL _delay_ms
                 ; 0000 01E5             press = 0 ;
00051a 94e8      	CLT
00051b f820      	BLD  R2,0
                 ; 0000 01E6         }
                 ; 0000 01E7 
                 ; 0000 01E8         if(log_id == 1 && x == 2)
                 _0x7E:
00051c 940e 08fc 	CALL SUBOPT_0x19
00051e f429      	BRNE _0x82
00051f e0e2      	LDI  R30,LOW(2)
000520 e0f0      	LDI  R31,HIGH(2)
000521 15e4      	CP   R30,R4
000522 05f5      	CPC  R31,R5
000523 f009      	BREQ _0x83
                 _0x82:
000524 c018      	RJMP _0x81
                 _0x83:
                 ; 0000 01E9         {
                 ; 0000 01EA             puts("TEMP");
                +
000525 efa6     +LDI R26 , LOW ( _0x43 + ( 489 ) )
000526 e0b4     +LDI R27 , HIGH ( _0x43 + ( 489 ) )
                 	__POINTW2MN _0x43,489
000527 940e 0638 	CALL _puts
                 ; 0000 01EB             lcd_clear();
000529 940e 0836 	CALL SUBOPT_0x0
                 ; 0000 01EC             lcd_gotoxy(0,0);
                 ; 0000 01ED             lcd_puts("Temp =");
                +
00052b efab     +LDI R26 , LOW ( _0x43 + ( 494 ) )
00052c e0b4     +LDI R27 , HIGH ( _0x43 + ( 494 ) )
                 	__POINTW2MN _0x43,494
00052d d0c5      	RCALL _lcd_puts
                 ; 0000 01EE             lcd_gotoxy(5,0);
00052e e0e5      	LDI  R30,LOW(5)
00052f 93ea      	ST   -Y,R30
000530 e0a0      	LDI  R26,LOW(0)
000531 940e 0890 	CALL SUBOPT_0xB
                 ; 0000 01EF             gets(c,15);
000533 e0af      	LDI  R26,LOW(15)
000534 e0b0      	LDI  R27,0
000535 940e 0646 	CALL _gets
                 ; 0000 01F0             lcd_puts(c);
000537 940e 0907 	CALL SUBOPT_0x1B
                 ; 0000 01F1 
                 ; 0000 01F2             delay_ms(2000);
000539 eda0      	LDI  R26,LOW(2000)
00053a e0b7      	LDI  R27,HIGH(2000)
00053b 940e 094d 	CALL _delay_ms
                 ; 0000 01F3 
                 ; 0000 01F4 
                 ; 0000 01F5 
                 ; 0000 01F6         }
                 ; 0000 01F7 
                 ; 0000 01F8         if(log_id == 1 && x == 3)
                 _0x81:
00053d 940e 08fc 	CALL SUBOPT_0x19
00053f f429      	BRNE _0x85
000540 e0e3      	LDI  R30,LOW(3)
000541 e0f0      	LDI  R31,HIGH(3)
000542 15e4      	CP   R30,R4
000543 05f5      	CPC  R31,R5
000544 f009      	BREQ _0x86
                 _0x85:
000545 c048      	RJMP _0x84
                 _0x86:
                 ; 0000 01F9         {
                 ; 0000 01FA             lcd_clear();
000546 940e 0836 	CALL SUBOPT_0x0
                 ; 0000 01FB             lcd_gotoxy(0,0);
                 ; 0000 01FC             lcd_puts("  enter step motor  ");
                +
000548 e0a2     +LDI R26 , LOW ( _0x43 + ( 501 ) )
000549 e0b5     +LDI R27 , HIGH ( _0x43 + ( 501 ) )
                 	__POINTW2MN _0x43,501
00054a 940e 08e2 	CALL SUBOPT_0x15
                 ; 0000 01FD             lcd_gotoxy(0,1);
00054c e0a1      	LDI  R26,LOW(1)
00054d d064      	RCALL _lcd_gotoxy
                 ; 0000 01FE             lcd_puts("steps between(2-4-8)");
                +
00054e e1a7     +LDI R26 , LOW ( _0x43 + ( 522 ) )
00054f e0b5     +LDI R27 , HIGH ( _0x43 + ( 522 ) )
                 	__POINTW2MN _0x43,522
000550 d0a2      	RCALL _lcd_puts
                 ; 0000 01FF 
                 ; 0000 0200                     while(1)
                 _0x87:
                 ; 0000 0201                     {
                 ; 0000 0202                     ROW1 = 0 ;
000551 940e 08c9 	CALL SUBOPT_0x10
                 ; 0000 0203                     delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 ; 0000 0204                     if(C2==0) x = 2  ,press = 1   ;
000553 999d      	SBIC 0x13,5
000554 c002      	RJMP _0x8C
000555 940e 08ce 	CALL SUBOPT_0x11
                 ; 0000 0205                     delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x8C:
000557 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 0206                     ROW1 = 1 ;
000559 9aa8      	SBI  0x15,0
                 ; 0000 0207                     ROW2 = 0 ;
00055a 98a9      	CBI  0x15,1
                 ; 0000 0208                     delay_ms(50);   // in normal we use 2ms but proteus can not detect
00055b 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 0209                     if(C1==0) x = 4   ,press = 1  ;
00055d 999c      	SBIC 0x13,4
00055e c005      	RJMP _0x91
00055f e0e4      	LDI  R30,LOW(4)
000560 e0f0      	LDI  R31,HIGH(4)
000561 012f      	MOVW R4,R30
000562 9468      	SET
000563 f820      	BLD  R2,0
                 ; 0000 020A                     delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x91:
000564 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 020B                     ROW2 = 1 ;
000566 9aa9      	SBI  0x15,1
                 ; 0000 020C                     ROW3 = 0 ;
000567 98aa      	CBI  0x15,2
                 ; 0000 020D                     delay_ms(50);   // in normal we use 2ms but proteus can not detect
000568 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 020E                     if(C2==0) x = 8   ,press = 1  ;
00056a 999d      	SBIC 0x13,5
00056b c005      	RJMP _0x96
00056c e0e8      	LDI  R30,LOW(8)
00056d e0f0      	LDI  R31,HIGH(8)
00056e 012f      	MOVW R4,R30
00056f 9468      	SET
000570 f820      	BLD  R2,0
                 ; 0000 020F                     delay_ms(50);   // in normal we use 2ms but proteus can not detect
                 _0x96:
000571 940e 08d4 	CALL SUBOPT_0x12
                 ; 0000 0210                     ROW3 = 1 ;
000573 9aaa      	SBI  0x15,2
                 ; 0000 0211 
                 ; 0000 0212 
                 ; 0000 0213                         if(press == 1)
000574 fe20      	SBRS R2,0
000575 c003      	RJMP _0x99
                 ; 0000 0214                         {
                 ; 0000 0215                         press = 0 ;
000576 94e8      	CLT
000577 f820      	BLD  R2,0
                 ; 0000 0216                           break ;
000578 c001      	RJMP _0x89
                 ; 0000 0217                         }
                 ; 0000 0218                     }
                 _0x99:
000579 cfd7      	RJMP _0x87
                 _0x89:
                 ; 0000 0219              sprintf(c,"step %d",x);
00057a e2ee      	LDI  R30,LOW(_c)
00057b e0f5      	LDI  R31,HIGH(_c)
00057c 93fa      	ST   -Y,R31
00057d 93ea      	ST   -Y,R30
                +
00057e e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 532 ) )
00057f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 532 ) )
                 	__POINTW1FN _0x0,532
000580 940e 0897 	CALL SUBOPT_0xC
                 ; 0000 021A 
                 ; 0000 021B              puts(c);
000582 940e 0638 	CALL _puts
                 ; 0000 021C              lcd_gotoxy(3,3);
000584 e0e3      	LDI  R30,LOW(3)
000585 93ea      	ST   -Y,R30
000586 e0a3      	LDI  R26,LOW(3)
000587 d02a      	RCALL _lcd_gotoxy
                 ; 0000 021D              lcd_puts(c);
000588 940e 0907 	CALL SUBOPT_0x1B
                 ; 0000 021E 
                 ; 0000 021F              delay_ms(5000);
00058a e8a8      	LDI  R26,LOW(5000)
00058b e1b3      	LDI  R27,HIGH(5000)
00058c 940e 094d 	CALL _delay_ms
                 ; 0000 0220 
                 ; 0000 0221 
                 ; 0000 0222         }
                 ; 0000 0223 }
                 _0x84:
00058e ce10      	RJMP _0x4D
                 ; 0000 0224 
                 ; 0000 0225 
                 ; 0000 0226 }
                 _0x9A:
00058f cfff      	RJMP _0x9A
                 ; .FEND
                 
                 	.DSEG
                 _0x43:
00030d           	.BYTE 0x21F
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000590 93aa      	ST   -Y,R26
000591 b3eb      	IN   R30,0x1B
000592 70ef      	ANDI R30,LOW(0xF)
000593 2fae      	MOV  R26,R30
000594 81e8      	LD   R30,Y
000595 7fe0      	ANDI R30,LOW(0xF0)
000596 2bea      	OR   R30,R26
000597 bbeb      	OUT  0x1B,R30
                +
000598 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000599 958a     +DEC R24
00059a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00059b 9ada      	SBI  0x1B,2
                +
00059c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00059d 958a     +DEC R24
00059e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00059f 98da      	CBI  0x1B,2
                +
0005a0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0005a1 958a     +DEC R24
0005a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0005a3 940c 0636 	JMP  _0x2080003
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0005a5 93aa      	ST   -Y,R26
0005a6 81a8      	LD   R26,Y
0005a7 dfe8      	RCALL __lcd_write_nibble_G100
0005a8 81e8          ld    r30,y
0005a9 95e2          swap  r30
0005aa 83e8          st    y,r30
0005ab 81a8      	LD   R26,Y
0005ac dfe3      	RCALL __lcd_write_nibble_G100
                +
0005ad e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0005ae 958a     +DEC R24
0005af f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0005b0 940c 0636 	JMP  _0x2080003
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0005b2 93aa      	ST   -Y,R26
0005b3 81e8      	LD   R30,Y
0005b4 e0f0      	LDI  R31,0
0005b5 56e0      	SUBI R30,LOW(-__base_y_G100)
0005b6 4ffa      	SBCI R31,HIGH(-__base_y_G100)
0005b7 81e0      	LD   R30,Z
0005b8 81a9      	LDD  R26,Y+1
0005b9 0fae      	ADD  R26,R30
0005ba dfea      	RCALL __lcd_write_data
0005bb 81e9      	LDD  R30,Y+1
0005bc 93e0 05a4 	STS  __lcd_x,R30
0005be 81e8      	LD   R30,Y
0005bf 93e0 05a5 	STS  __lcd_y,R30
0005c1 9622      	ADIW R28,2
0005c2 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0005c3 e0a2      	LDI  R26,LOW(2)
0005c4 940e 090b 	CALL SUBOPT_0x1C
0005c6 e0ac      	LDI  R26,LOW(12)
0005c7 dfdd      	RCALL __lcd_write_data
0005c8 e0a1      	LDI  R26,LOW(1)
0005c9 940e 090b 	CALL SUBOPT_0x1C
0005cb e0e0      	LDI  R30,LOW(0)
0005cc 93e0 05a5 	STS  __lcd_y,R30
0005ce 93e0 05a4 	STS  __lcd_x,R30
0005d0 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0005d1 93aa      	ST   -Y,R26
0005d2 81a8      	LD   R26,Y
0005d3 30aa      	CPI  R26,LOW(0xA)
0005d4 f031      	BREQ _0x2000005
0005d5 91e0 05a6 	LDS  R30,__lcd_maxx
0005d7 91a0 05a4 	LDS  R26,__lcd_x
0005d9 17ae      	CP   R26,R30
0005da f068      	BRLO _0x2000004
                 _0x2000005:
0005db e0e0      	LDI  R30,LOW(0)
0005dc 93ea      	ST   -Y,R30
0005dd 91a0 05a5 	LDS  R26,__lcd_y
0005df 5faf      	SUBI R26,-LOW(1)
0005e0 93a0 05a5 	STS  __lcd_y,R26
0005e2 dfcf      	RCALL _lcd_gotoxy
0005e3 81a8      	LD   R26,Y
0005e4 30aa      	CPI  R26,LOW(0xA)
0005e5 f411      	BRNE _0x2000007
0005e6 940c 0636 	JMP  _0x2080003
                 _0x2000007:
                 _0x2000004:
0005e8 91e0 05a4 	LDS  R30,__lcd_x
0005ea 5fef      	SUBI R30,-LOW(1)
0005eb 93e0 05a4 	STS  __lcd_x,R30
0005ed 9ad8      	SBI  0x1B,0
0005ee 81a8      	LD   R26,Y
0005ef dfb5      	RCALL __lcd_write_data
0005f0 98d8      	CBI  0x1B,0
0005f1 940c 0636 	JMP  _0x2080003
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0005f3 93ba      	ST   -Y,R27
0005f4 93aa      	ST   -Y,R26
0005f5 931a      	ST   -Y,R17
                 _0x2000008:
0005f6 940e 0911 	CALL SUBOPT_0x1D
0005f8 f019      	BREQ _0x200000A
0005f9 2fa1      	MOV  R26,R17
0005fa dfd6      	RCALL _lcd_putchar
0005fb cffa      	RJMP _0x2000008
                 _0x200000A:
0005fc 940c 0643 	JMP  _0x2080002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0005fe 93aa      	ST   -Y,R26
0005ff b3ea      	IN   R30,0x1A
000600 6fe0      	ORI  R30,LOW(0xF0)
000601 bbea      	OUT  0x1A,R30
000602 9ad2      	SBI  0x1A,2
000603 9ad0      	SBI  0x1A,0
000604 9ad1      	SBI  0x1A,1
000605 98da      	CBI  0x1B,2
000606 98d8      	CBI  0x1B,0
000607 98d9      	CBI  0x1B,1
000608 81e8      	LD   R30,Y
000609 93e0 05a6 	STS  __lcd_maxx,R30
00060b 58e0      	SUBI R30,-LOW(128)
                +
00060c 93e0 05a2+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00060e 81e8      	LD   R30,Y
00060f 54e0      	SUBI R30,-LOW(192)
                +
000610 93e0 05a3+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000612 e1a4      	LDI  R26,LOW(20)
000613 e0b0      	LDI  R27,0
000614 940e 094d 	CALL _delay_ms
000616 940e 0919 	CALL SUBOPT_0x1E
000618 940e 0919 	CALL SUBOPT_0x1E
00061a 940e 0919 	CALL SUBOPT_0x1E
00061c e2a0      	LDI  R26,LOW(32)
00061d df72      	RCALL __lcd_write_nibble_G100
                +
00061e ec88     +LDI R24 , LOW ( 200 )
00061f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000620 9701     +SBIW R24 , 1
000621 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000622 e2a8      	LDI  R26,LOW(40)
000623 df81      	RCALL __lcd_write_data
000624 e0a4      	LDI  R26,LOW(4)
000625 df7f      	RCALL __lcd_write_data
000626 e8a5      	LDI  R26,LOW(133)
000627 df7d      	RCALL __lcd_write_data
000628 e0a6      	LDI  R26,LOW(6)
000629 df7b      	RCALL __lcd_write_data
00062a df98      	RCALL _lcd_clear
00062b 940c 0636 	JMP  _0x2080003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
00062d 9b5f           sbis usr,rxc
00062e cffe           rjmp getchar0
00062f b1ec           in   r30,udr
000630 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
000631 93aa      	ST   -Y,R26
                 putchar0:
000632 9b5d           sbis usr,udre
000633 cffe           rjmp putchar0
000634 81e8           ld   r30,y
000635 b9ec           out  udr,r30
                 _0x2080003:
000636 9621      	ADIW R28,1
000637 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
000638 93ba      	ST   -Y,R27
000639 93aa      	ST   -Y,R26
00063a 931a      	ST   -Y,R17
                 _0x2020003:
00063b 940e 0911 	CALL SUBOPT_0x1D
00063d f019      	BREQ _0x2020005
00063e 2fa1      	MOV  R26,R17
00063f dff1      	RCALL _putchar
000640 cffa      	RJMP _0x2020003
                 _0x2020005:
000641 e0aa      	LDI  R26,LOW(10)
000642 dfee      	RCALL _putchar
                 _0x2080002:
000643 8118      	LDD  R17,Y+0
000644 9623      	ADIW R28,3
000645 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
000646 93ba      	ST   -Y,R27
000647 93aa      	ST   -Y,R26
000648 940e 09cb 	CALL __SAVELOCR6
                +
00064a 810e     +LDD R16 , Y + 6
00064b 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
00064c 8528     +LDD R18 , Y + 8
00064d 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2020009:
00064e 2e00      	MOV  R0,R16
00064f 2a01      	OR   R0,R17
000650 f0d9      	BREQ _0x202000B
                 _0x202000C:
000651 dfdb      	RCALL _getchar
000652 2f5e      	MOV  R21,R30
000653 3058      	CPI  R21,8
000654 f451      	BRNE _0x202000D
000655 81ae      	LDD  R26,Y+6
000656 81bf      	LDD  R27,Y+6+1
000657 170a      	CP   R16,R26
000658 071b      	CPC  R17,R27
000659 f420      	BRSH _0x202000E
                +
00065a 5021     +SUBI R18 , LOW ( 1 )
00065b 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
00065c 5f0f     +SUBI R16 , LOW ( - 1 )
00065d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x202000E:
00065e cff2      	RJMP _0x202000C
                 _0x202000D:
00065f 305a      	CPI  R21,10
000660 f059      	BREQ _0x202000B
000661 933f      	PUSH R19
000662 932f      	PUSH R18
                +
000663 5f2f     +SUBI R18 , LOW ( - 1 )
000664 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000665 2fe5      	MOV  R30,R21
000666 91af      	POP  R26
000667 91bf      	POP  R27
000668 93ec      	ST   X,R30
                +
000669 5001     +SUBI R16 , LOW ( 1 )
00066a 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00066b cfe2      	RJMP _0x2020009
                 _0x202000B:
00066c 01d9      	MOVW R26,R18
00066d e0e0      	LDI  R30,LOW(0)
00066e 93ec      	ST   X,R30
00066f 85e8      	LDD  R30,Y+8
000670 85f9      	LDD  R31,Y+8+1
000671 940e 09d2 	CALL __LOADLOCR6
000673 962a      	ADIW R28,10
000674 9508      	RET
                 ; .FEND
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000675 93ba      	ST   -Y,R27
000676 93aa      	ST   -Y,R26
000677 931a      	ST   -Y,R17
000678 930a      	ST   -Y,R16
000679 81aa      	LDD  R26,Y+2
00067a 81bb      	LDD  R27,Y+2+1
00067b 9612      	ADIW R26,2
00067c 940e 09ae 	CALL __GETW1P
00067e 9730      	SBIW R30,0
00067f f159      	BREQ _0x2020010
000680 81aa      	LDD  R26,Y+2
000681 81bb      	LDD  R27,Y+2+1
000682 9614      	ADIW R26,4
000683 940e 09ae 	CALL __GETW1P
000685 018f      	MOVW R16,R30
000686 9730      	SBIW R30,0
000687 f061      	BREQ _0x2020012
                +
000688 3002     +CPI R16 , LOW ( 2 )
000689 e0e0     +LDI R30 , HIGH ( 2 )
00068a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00068b f098      	BRLO _0x2020013
00068c 01f8      	MOVW R30,R16
00068d 9731      	SBIW R30,1
00068e 018f      	MOVW R16,R30
                +
00068f 81aa     +LDD R26 , Y + 2
000690 81bb     +LDD R27 , Y + 2 + 1
000691 9614     +ADIW R26 , 4
000692 93ed     +ST X + , R30
000693 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000694 81aa      	LDD  R26,Y+2
000695 81bb      	LDD  R27,Y+2+1
000696 9612      	ADIW R26,2
000697 91ed      	LD   R30,X+
000698 91fd      	LD   R31,X+
000699 9631      	ADIW R30,1
00069a 93fe      	ST   -X,R31
00069b 93ee      	ST   -X,R30
00069c 9731      	SBIW R30,1
00069d 81ac      	LDD  R26,Y+4
00069e 83a0      	STD  Z+0,R26
                 _0x2020013:
00069f 81aa      	LDD  R26,Y+2
0006a0 81bb      	LDD  R27,Y+2+1
0006a1 940e 09ae 	CALL __GETW1P
0006a3 23ff      	TST  R31
0006a4 f02a      	BRMI _0x2020014
0006a5 91ed      	LD   R30,X+
0006a6 91fd      	LD   R31,X+
0006a7 9631      	ADIW R30,1
0006a8 93fe      	ST   -X,R31
0006a9 93ee      	ST   -X,R30
                 _0x2020014:
0006aa c006      	RJMP _0x2020015
                 _0x2020010:
0006ab 81aa      	LDD  R26,Y+2
0006ac 81bb      	LDD  R27,Y+2+1
0006ad efef      	LDI  R30,LOW(65535)
0006ae efff      	LDI  R31,HIGH(65535)
0006af 93ed      	ST   X+,R30
0006b0 93fc      	ST   X,R31
                 _0x2020015:
0006b1 8119      	LDD  R17,Y+1
0006b2 8108      	LDD  R16,Y+0
0006b3 9625      	ADIW R28,5
0006b4 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0006b5 93ba      	ST   -Y,R27
0006b6 93aa      	ST   -Y,R26
0006b7 9726      	SBIW R28,6
0006b8 940e 09cb 	CALL __SAVELOCR6
0006ba e010      	LDI  R17,0
0006bb 85ac      	LDD  R26,Y+12
0006bc 85bd      	LDD  R27,Y+12+1
0006bd e0e0      	LDI  R30,LOW(0)
0006be e0f0      	LDI  R31,HIGH(0)
0006bf 93ed      	ST   X+,R30
0006c0 93fc      	ST   X,R31
                 _0x2020016:
0006c1 89ea      	LDD  R30,Y+18
0006c2 89fb      	LDD  R31,Y+18+1
0006c3 9631      	ADIW R30,1
0006c4 8bea      	STD  Y+18,R30
0006c5 8bfb      	STD  Y+18+1,R31
0006c6 9731      	SBIW R30,1
0006c7 91e4      	LPM  R30,Z
0006c8 2f2e      	MOV  R18,R30
0006c9 30e0      	CPI  R30,0
0006ca f409      	BRNE PC+2
0006cb c115      	RJMP _0x2020018
0006cc 2fe1      	MOV  R30,R17
0006cd 30e0      	CPI  R30,0
0006ce f439      	BRNE _0x202001C
0006cf 3225      	CPI  R18,37
0006d0 f411      	BRNE _0x202001D
0006d1 e011      	LDI  R17,LOW(1)
0006d2 c002      	RJMP _0x202001E
                 _0x202001D:
0006d3 940e 0921 	CALL SUBOPT_0x1F
                 _0x202001E:
0006d5 c10a      	RJMP _0x202001B
                 _0x202001C:
0006d6 30e1      	CPI  R30,LOW(0x1)
0006d7 f4a9      	BRNE _0x202001F
0006d8 3225      	CPI  R18,37
0006d9 f419      	BRNE _0x2020020
0006da 940e 0921 	CALL SUBOPT_0x1F
0006dc c102      	RJMP _0x20200CC
                 _0x2020020:
0006dd e012      	LDI  R17,LOW(2)
0006de e040      	LDI  R20,LOW(0)
0006df e000      	LDI  R16,LOW(0)
0006e0 322d      	CPI  R18,45
0006e1 f411      	BRNE _0x2020021
0006e2 e001      	LDI  R16,LOW(1)
0006e3 c0fc      	RJMP _0x202001B
                 _0x2020021:
0006e4 322b      	CPI  R18,43
0006e5 f411      	BRNE _0x2020022
0006e6 e24b      	LDI  R20,LOW(43)
0006e7 c0f8      	RJMP _0x202001B
                 _0x2020022:
0006e8 3220      	CPI  R18,32
0006e9 f411      	BRNE _0x2020023
0006ea e240      	LDI  R20,LOW(32)
0006eb c0f4      	RJMP _0x202001B
                 _0x2020023:
0006ec c002      	RJMP _0x2020024
                 _0x202001F:
0006ed 30e2      	CPI  R30,LOW(0x2)
0006ee f439      	BRNE _0x2020025
                 _0x2020024:
0006ef e050      	LDI  R21,LOW(0)
0006f0 e013      	LDI  R17,LOW(3)
0006f1 3320      	CPI  R18,48
0006f2 f411      	BRNE _0x2020026
0006f3 6800      	ORI  R16,LOW(128)
0006f4 c0eb      	RJMP _0x202001B
                 _0x2020026:
0006f5 c003      	RJMP _0x2020027
                 _0x2020025:
0006f6 30e3      	CPI  R30,LOW(0x3)
0006f7 f009      	BREQ PC+2
0006f8 c0e7      	RJMP _0x202001B
                 _0x2020027:
0006f9 3320      	CPI  R18,48
0006fa f010      	BRLO _0x202002A
0006fb 332a      	CPI  R18,58
0006fc f008      	BRLO _0x202002B
                 _0x202002A:
0006fd c007      	RJMP _0x2020029
                 _0x202002B:
0006fe e0aa      	LDI  R26,LOW(10)
0006ff 9f5a      	MUL  R21,R26
000700 2d50      	MOV  R21,R0
000701 2fe2      	MOV  R30,R18
000702 53e0      	SUBI R30,LOW(48)
000703 0f5e      	ADD  R21,R30
000704 c0db      	RJMP _0x202001B
                 _0x2020029:
000705 2fe2      	MOV  R30,R18
000706 36e3      	CPI  R30,LOW(0x63)
000707 f449      	BRNE _0x202002F
000708 940e 0928 	CALL SUBOPT_0x20
00070a 89e8      	LDD  R30,Y+16
00070b 89f9      	LDD  R31,Y+16+1
00070c 81a4      	LDD  R26,Z+4
00070d 93aa      	ST   -Y,R26
00070e 940e 092e 	CALL SUBOPT_0x21
000710 c0ce      	RJMP _0x2020030
                 _0x202002F:
000711 37e3      	CPI  R30,LOW(0x73)
000712 f441      	BRNE _0x2020032
000713 940e 0928 	CALL SUBOPT_0x20
000715 940e 0934 	CALL SUBOPT_0x22
000717 940e 081d 	CALL _strlen
000719 2f1e      	MOV  R17,R30
00071a c00a      	RJMP _0x2020033
                 _0x2020032:
00071b 37e0      	CPI  R30,LOW(0x70)
00071c f461      	BRNE _0x2020035
00071d 940e 0928 	CALL SUBOPT_0x20
00071f 940e 0934 	CALL SUBOPT_0x22
000721 940e 0829 	CALL _strlenf
000723 2f1e      	MOV  R17,R30
000724 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000725 6002      	ORI  R16,LOW(2)
000726 770f      	ANDI R16,LOW(127)
000727 e030      	LDI  R19,LOW(0)
000728 c034      	RJMP _0x2020036
                 _0x2020035:
000729 36e4      	CPI  R30,LOW(0x64)
00072a f011      	BREQ _0x2020039
00072b 36e9      	CPI  R30,LOW(0x69)
00072c f411      	BRNE _0x202003A
                 _0x2020039:
00072d 6004      	ORI  R16,LOW(4)
00072e c002      	RJMP _0x202003B
                 _0x202003A:
00072f 37e5      	CPI  R30,LOW(0x75)
000730 f431      	BRNE _0x202003C
                 _0x202003B:
000731 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000732 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000733 83ee      	STD  Y+6,R30
000734 83ff      	STD  Y+6+1,R31
000735 e015      	LDI  R17,LOW(5)
000736 c00c      	RJMP _0x202003D
                 _0x202003C:
000737 35e8      	CPI  R30,LOW(0x58)
000738 f411      	BRNE _0x202003F
000739 6008      	ORI  R16,LOW(8)
00073a c003      	RJMP _0x2020040
                 _0x202003F:
00073b 37e8      	CPI  R30,LOW(0x78)
00073c f009      	BREQ PC+2
00073d c0a1      	RJMP _0x2020071
                 _0x2020040:
00073e e5ee      	LDI  R30,LOW(_tbl16_G101*2)
00073f e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000740 83ee      	STD  Y+6,R30
000741 83ff      	STD  Y+6+1,R31
000742 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000743 ff02      	SBRS R16,2
000744 c014      	RJMP _0x2020042
000745 940e 0928 	CALL SUBOPT_0x20
000747 940e 093e 	CALL SUBOPT_0x23
000749 85ab      	LDD  R26,Y+11
00074a 23aa      	TST  R26
00074b f43a      	BRPL _0x2020043
00074c 85ea      	LDD  R30,Y+10
00074d 85fb      	LDD  R31,Y+10+1
00074e 940e 0960 	CALL __ANEGW1
000750 87ea      	STD  Y+10,R30
000751 87fb      	STD  Y+10+1,R31
000752 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000753 3040      	CPI  R20,0
000754 f011      	BREQ _0x2020044
000755 5f1f      	SUBI R17,-LOW(1)
000756 c001      	RJMP _0x2020045
                 _0x2020044:
000757 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000758 c004      	RJMP _0x2020046
                 _0x2020042:
000759 940e 0928 	CALL SUBOPT_0x20
00075b 940e 093e 	CALL SUBOPT_0x23
                 _0x2020046:
                 _0x2020036:
00075d fd00      	SBRC R16,0
00075e c011      	RJMP _0x2020047
                 _0x2020048:
00075f 1715      	CP   R17,R21
000760 f478      	BRSH _0x202004A
000761 ff07      	SBRS R16,7
000762 c008      	RJMP _0x202004B
000763 ff02      	SBRS R16,2
000764 c004      	RJMP _0x202004C
000765 7f0b      	ANDI R16,LOW(251)
000766 2f24      	MOV  R18,R20
000767 5011      	SUBI R17,LOW(1)
000768 c001      	RJMP _0x202004D
                 _0x202004C:
000769 e320      	LDI  R18,LOW(48)
                 _0x202004D:
00076a c001      	RJMP _0x202004E
                 _0x202004B:
00076b e220      	LDI  R18,LOW(32)
                 _0x202004E:
00076c 940e 0921 	CALL SUBOPT_0x1F
00076e 5051      	SUBI R21,LOW(1)
00076f cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000770 2f31      	MOV  R19,R17
000771 ff01      	SBRS R16,1
000772 c017      	RJMP _0x202004F
                 _0x2020050:
000773 3030      	CPI  R19,0
000774 f0a1      	BREQ _0x2020052
000775 ff03      	SBRS R16,3
000776 c006      	RJMP _0x2020053
000777 81ee      	LDD  R30,Y+6
000778 81ff      	LDD  R31,Y+6+1
000779 9125      	LPM  R18,Z+
00077a 83ee      	STD  Y+6,R30
00077b 83ff      	STD  Y+6+1,R31
00077c c005      	RJMP _0x2020054
                 _0x2020053:
00077d 81ae      	LDD  R26,Y+6
00077e 81bf      	LDD  R27,Y+6+1
00077f 912d      	LD   R18,X+
000780 83ae      	STD  Y+6,R26
000781 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000782 940e 0921 	CALL SUBOPT_0x1F
000784 3050      	CPI  R21,0
000785 f009      	BREQ _0x2020055
000786 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000787 5031      	SUBI R19,LOW(1)
000788 cfea      	RJMP _0x2020050
                 _0x2020052:
000789 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00078a e320      	LDI  R18,LOW(48)
00078b 81ee      	LDD  R30,Y+6
00078c 81ff      	LDD  R31,Y+6+1
00078d 940e 09bd 	CALL __GETW1PF
00078f 87e8      	STD  Y+8,R30
000790 87f9      	STD  Y+8+1,R31
000791 81ee      	LDD  R30,Y+6
000792 81ff      	LDD  R31,Y+6+1
000793 9632      	ADIW R30,2
000794 83ee      	STD  Y+6,R30
000795 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000796 85e8      	LDD  R30,Y+8
000797 85f9      	LDD  R31,Y+8+1
000798 85aa      	LDD  R26,Y+10
000799 85bb      	LDD  R27,Y+10+1
00079a 17ae      	CP   R26,R30
00079b 07bf      	CPC  R27,R31
00079c f050      	BRLO _0x202005C
00079d 5f2f      	SUBI R18,-LOW(1)
00079e 85a8      	LDD  R26,Y+8
00079f 85b9      	LDD  R27,Y+8+1
0007a0 85ea      	LDD  R30,Y+10
0007a1 85fb      	LDD  R31,Y+10+1
0007a2 1bea      	SUB  R30,R26
0007a3 0bfb      	SBC  R31,R27
0007a4 87ea      	STD  Y+10,R30
0007a5 87fb      	STD  Y+10+1,R31
0007a6 cfef      	RJMP _0x202005A
                 _0x202005C:
0007a7 332a      	CPI  R18,58
0007a8 f028      	BRLO _0x202005D
0007a9 ff03      	SBRS R16,3
0007aa c002      	RJMP _0x202005E
0007ab 5f29      	SUBI R18,-LOW(7)
0007ac c001      	RJMP _0x202005F
                 _0x202005E:
0007ad 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0007ae fd04      	SBRC R16,4
0007af c01a      	RJMP _0x2020061
0007b0 3321      	CPI  R18,49
0007b1 f420      	BRSH _0x2020063
0007b2 85a8      	LDD  R26,Y+8
0007b3 85b9      	LDD  R27,Y+8+1
0007b4 9711      	SBIW R26,1
0007b5 f409      	BRNE _0x2020062
                 _0x2020063:
0007b6 c009      	RJMP _0x20200CD
                 _0x2020062:
0007b7 1753      	CP   R21,R19
0007b8 f010      	BRLO _0x2020067
0007b9 ff00      	SBRS R16,0
0007ba c001      	RJMP _0x2020068
                 _0x2020067:
0007bb c013      	RJMP _0x2020066
                 _0x2020068:
0007bc e220      	LDI  R18,LOW(32)
0007bd ff07      	SBRS R16,7
0007be c00b      	RJMP _0x2020069
0007bf e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0007c0 6100      	ORI  R16,LOW(16)
0007c1 ff02      	SBRS R16,2
0007c2 c007      	RJMP _0x202006A
0007c3 7f0b      	ANDI R16,LOW(251)
0007c4 934a      	ST   -Y,R20
0007c5 940e 092e 	CALL SUBOPT_0x21
0007c7 3050      	CPI  R21,0
0007c8 f009      	BREQ _0x202006B
0007c9 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0007ca 940e 0921 	CALL SUBOPT_0x1F
0007cc 3050      	CPI  R21,0
0007cd f009      	BREQ _0x202006C
0007ce 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0007cf 5031      	SUBI R19,LOW(1)
0007d0 85a8      	LDD  R26,Y+8
0007d1 85b9      	LDD  R27,Y+8+1
0007d2 9712      	SBIW R26,2
0007d3 f008      	BRLO _0x2020059
0007d4 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0007d5 ff00      	SBRS R16,0
0007d6 c008      	RJMP _0x202006D
                 _0x202006E:
0007d7 3050      	CPI  R21,0
0007d8 f031      	BREQ _0x2020070
0007d9 5051      	SUBI R21,LOW(1)
0007da e2e0      	LDI  R30,LOW(32)
0007db 93ea      	ST   -Y,R30
0007dc 940e 092e 	CALL SUBOPT_0x21
0007de cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0007df e010      	LDI  R17,LOW(0)
                 _0x202001B:
0007e0 cee0      	RJMP _0x2020016
                 _0x2020018:
0007e1 85ac      	LDD  R26,Y+12
0007e2 85bd      	LDD  R27,Y+12+1
0007e3 940e 09ae 	CALL __GETW1P
0007e5 940e 09d2 	CALL __LOADLOCR6
0007e7 9664      	ADIW R28,20
0007e8 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0007e9 92ff      	PUSH R15
0007ea 2ef8      	MOV  R15,R24
0007eb 9726      	SBIW R28,6
0007ec 940e 09cd 	CALL __SAVELOCR4
0007ee 940e 0946 	CALL SUBOPT_0x24
0007f0 9730      	SBIW R30,0
0007f1 f419      	BRNE _0x2020072
0007f2 efef      	LDI  R30,LOW(65535)
0007f3 efff      	LDI  R31,HIGH(65535)
0007f4 c023      	RJMP _0x2080001
                 _0x2020072:
0007f5 01de      	MOVW R26,R28
0007f6 9616      	ADIW R26,6
0007f7 940e 0957 	CALL __ADDW2R15
0007f9 018d      	MOVW R16,R26
0007fa 940e 0946 	CALL SUBOPT_0x24
0007fc 83ee      	STD  Y+6,R30
0007fd 83ff      	STD  Y+6+1,R31
0007fe e0e0      	LDI  R30,LOW(0)
0007ff 87e8      	STD  Y+8,R30
000800 87e9      	STD  Y+8+1,R30
000801 01de      	MOVW R26,R28
000802 961a      	ADIW R26,10
000803 940e 0957 	CALL __ADDW2R15
000805 940e 09ae 	CALL __GETW1P
000807 93fa      	ST   -Y,R31
000808 93ea      	ST   -Y,R30
000809 931a      	ST   -Y,R17
00080a 930a      	ST   -Y,R16
00080b e7e5      	LDI  R30,LOW(_put_buff_G101)
00080c e0f6      	LDI  R31,HIGH(_put_buff_G101)
00080d 93fa      	ST   -Y,R31
00080e 93ea      	ST   -Y,R30
00080f 01de      	MOVW R26,R28
000810 961a      	ADIW R26,10
000811 dea3      	RCALL __print_G101
000812 019f      	MOVW R18,R30
000813 81ae      	LDD  R26,Y+6
000814 81bf      	LDD  R27,Y+6+1
000815 e0e0      	LDI  R30,LOW(0)
000816 93ec      	ST   X,R30
000817 01f9      	MOVW R30,R18
                 _0x2080001:
000818 940e 09d4 	CALL __LOADLOCR4
00081a 962a      	ADIW R28,10
00081b 90ff      	POP  R15
00081c 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00081d 93ba      	ST   -Y,R27
00081e 93aa      	ST   -Y,R26
00081f 91a9          ld   r26,y+
000820 91b9          ld   r27,y+
000821 27ee          clr  r30
000822 27ff          clr  r31
                 strlen0:
000823 916d          ld   r22,x+
000824 2366          tst  r22
000825 f011          breq strlen1
000826 9631          adiw r30,1
000827 cffb          rjmp strlen0
                 strlen1:
000828 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000829 93ba      	ST   -Y,R27
00082a 93aa      	ST   -Y,R26
00082b 27aa          clr  r26
00082c 27bb          clr  r27
00082d 91e9          ld   r30,y+
00082e 91f9          ld   r31,y+
                 strlenf0:
00082f 9005      	lpm  r0,z+
000830 2000          tst  r0
000831 f011          breq strlenf1
000832 9611          adiw r26,1
000833 cffb          rjmp strlenf0
                 strlenf1:
000834 01fd          movw r30,r26
000835 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _log_id:
00052c           	.BYTE 0x2
                 _c:
00052e           	.BYTE 0x14
                 _id:
000542           	.BYTE 0x28
                 _pass:
00056a           	.BYTE 0x28
                 _check:
000592           	.BYTE 0x4
                 _year:
000596           	.BYTE 0x2
                 _mounth:
000598           	.BYTE 0x2
                 _day:
00059a           	.BYTE 0x2
                 _hour:
00059c           	.BYTE 0x2
                 _minute:
00059e           	.BYTE 0x2
                 __base_y_G100:
0005a0           	.BYTE 0x4
                 __lcd_x:
0005a4           	.BYTE 0x1
                 __lcd_y:
0005a5           	.BYTE 0x1
                 __lcd_maxx:
0005a6           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x0:
000836 940e 05c3 	CALL _lcd_clear
000838 e0e0      	LDI  R30,LOW(0)
000839 93ea      	ST   -Y,R30
00083a e0a0      	LDI  R26,LOW(0)
00083b 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1:
00083d 940e 05f3 	CALL _lcd_puts
00083f e0e1      	LDI  R30,LOW(1)
000840 93ea      	ST   -Y,R30
000841 e0a1      	LDI  R26,LOW(1)
000842 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x2:
000844 940e 05f3 	CALL _lcd_puts
000846 e0e0      	LDI  R30,LOW(0)
000847 93ea      	ST   -Y,R30
000848 e0a3      	LDI  R26,LOW(3)
000849 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
00084b 940e 05f3 	CALL _lcd_puts
00084d e0e4      	LDI  R30,LOW(4)
00084e e0f0      	LDI  R31,HIGH(4)
00084f 013f      	MOVW R6,R30
000850 e0e3      	LDI  R30,LOW(3)
000851 e0f0      	LDI  R31,HIGH(3)
000852 014f      	MOVW R8,R30
000853 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000854 e4a2      	LDI  R26,LOW(_id)
000855 e0b5      	LDI  R27,HIGH(_id)
000856 940e 096c 	CALL __LSLW2
000858 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000859 0fae      	ADD  R26,R30
00085a 1fbf      	ADC  R27,R31
00085b 940e 09b2 	CALL __GETD1P
00085d 91a0 0592 	LDS  R26,_check
00085f 91b0 0593 	LDS  R27,_check+1
000861 9180 0594 	LDS  R24,_check+2
000863 9190 0595 	LDS  R25,_check+3
000865 940e 09c6 	CALL __CPD12
000867 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
000868 94e8      	CLT
000869 f825      	BLD  R2,5
00086a e0e0      	LDI  R30,LOW(0)
00086b 93e0 0592 	STS  _check,R30
00086d 93e0 0593 	STS  _check+1,R30
00086f 93e0 0594 	STS  _check+2,R30
000871 93e0 0595 	STS  _check+3,R30
000873 cfc2      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000874 94e8      	CLT
000875 f824      	BLD  R2,4
000876 9a97      	SBI  0x12,7
000877 efa4      	LDI  R26,LOW(500)
000878 e0b1      	LDI  R27,HIGH(500)
000879 940e 094d 	CALL _delay_ms
00087b 9897      	CBI  0x12,7
00087c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
00087d 940e 05c3 	CALL _lcd_clear
00087f e0e3      	LDI  R30,LOW(3)
000880 93ea      	ST   -Y,R30
000881 e0a0      	LDI  R26,LOW(0)
000882 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
000884 940e 05f3 	CALL _lcd_puts
000886 e0e1      	LDI  R30,LOW(1)
000887 93ea      	ST   -Y,R30
000888 e0a2      	LDI  R26,LOW(2)
000889 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00088b e6aa      	LDI  R26,LOW(_pass)
00088c e0b5      	LDI  R27,HIGH(_pass)
00088d 940e 096c 	CALL __LSLW2
00088f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
000890 940e 05b2 	CALL _lcd_gotoxy
000892 e2ee      	LDI  R30,LOW(_c)
000893 e0f5      	LDI  R31,HIGH(_c)
000894 93fa      	ST   -Y,R31
000895 93ea      	ST   -Y,R30
000896 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xC:
000897 93fa      	ST   -Y,R31
000898 93ea      	ST   -Y,R30
000899 01f2      	MOVW R30,R4
00089a 940e 0971 	CALL __CWD1
00089c 940e 09c1 	CALL __PUTPARD1
00089e e084      	LDI  R24,4
00089f 940e 07e9 	CALL _sprintf
0008a1 9628      	ADIW R28,8
0008a2 e2ae      	LDI  R26,LOW(_c)
0008a3 e0b5      	LDI  R27,HIGH(_c)
0008a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xD:
0008a5 01df      	MOVW R26,R30
0008a6 940e 09b2 	CALL __GETD1P
                +
0008a8 e0aa     +LDI R26 , LOW ( 0xA )
0008a9 e0b0     +LDI R27 , HIGH ( 0xA )
0008aa e080     +LDI R24 , BYTE3 ( 0xA )
0008ab e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
0008ac 940e 0996 	CALL __MULD12
0008ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xE:
0008af 0fea      	ADD  R30,R26
0008b0 1ffb      	ADC  R31,R27
0008b1 010f      	MOVW R0,R30
0008b2 01df      	MOVW R26,R30
0008b3 940e 09b2 	CALL __GETD1P
0008b5 01df      	MOVW R26,R30
0008b6 01cb      	MOVW R24,R22
0008b7 01f2      	MOVW R30,R4
0008b8 940e 0971 	CALL __CWD1
0008ba 940e 095b 	CALL __ADDD12
0008bc 01d0      	MOVW R26,R0
0008bd 940e 09b8 	CALL __PUTDP1
0008bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
0008c0 93e0 0592 	STS  _check,R30
0008c2 93f0 0593 	STS  _check+1,R31
0008c4 9360 0594 	STS  _check+2,R22
0008c6 9370 0595 	STS  _check+3,R23
0008c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
0008c9 98a8      	CBI  0x15,0
0008ca e3a2      	LDI  R26,LOW(50)
0008cb e0b0      	LDI  R27,0
0008cc 940c 094d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
0008ce e0e2      	LDI  R30,LOW(2)
0008cf e0f0      	LDI  R31,HIGH(2)
0008d0 012f      	MOVW R4,R30
0008d1 9468      	SET
0008d2 f820      	BLD  R2,0
0008d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x12:
0008d4 e3a2      	LDI  R26,LOW(50)
0008d5 e0b0      	LDI  R27,0
0008d6 940c 094d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0008d8 e0e1      	LDI  R30,LOW(1)
0008d9 93ea      	ST   -Y,R30
0008da e0a0      	LDI  R26,LOW(0)
0008db 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
0008dd e0e0      	LDI  R30,LOW(0)
0008de 93ea      	ST   -Y,R30
0008df e0a0      	LDI  R26,LOW(0)
0008e0 940c 05b2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x15:
0008e2 940e 05f3 	CALL _lcd_puts
0008e4 e0e0      	LDI  R30,LOW(0)
0008e5 93ea      	ST   -Y,R30
0008e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
0008e7 91a0 052c 	LDS  R26,_log_id
0008e9 91b0 052d 	LDS  R27,_log_id+1
0008eb 9710      	SBIW R26,0
0008ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
0008ed 91e0 0592 	LDS  R30,_check
0008ef 91f0 0593 	LDS  R31,_check+1
0008f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x18:
0008f2 e0e0      	LDI  R30,LOW(0)
0008f3 93e0 0592 	STS  _check,R30
0008f5 93e0 0593 	STS  _check+1,R30
0008f7 93e0 0594 	STS  _check+2,R30
0008f9 93e0 0595 	STS  _check+3,R30
0008fb cf3a      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
0008fc 91a0 052c 	LDS  R26,_log_id
0008fe 91b0 052d 	LDS  R27,_log_id+1
000900 9711      	SBIW R26,1
000901 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
000902 940e 0971 	CALL __CWD1
000904 940e 09c1 	CALL __PUTPARD1
000906 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000907 e2ae      	LDI  R26,LOW(_c)
000908 e0b5      	LDI  R27,HIGH(_c)
000909 940c 05f3 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
00090b 940e 05a5 	CALL __lcd_write_data
00090d e0a3      	LDI  R26,LOW(3)
00090e e0b0      	LDI  R27,0
00090f 940c 094d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D:
000911 81a9      	LDD  R26,Y+1
000912 81ba      	LDD  R27,Y+1+1
000913 91ed      	LD   R30,X+
000914 83a9      	STD  Y+1,R26
000915 83ba      	STD  Y+1+1,R27
000916 2f1e      	MOV  R17,R30
000917 30e0      	CPI  R30,0
000918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
000919 e3a0      	LDI  R26,LOW(48)
00091a 940e 0590 	CALL __lcd_write_nibble_G100
                +
00091c ec88     +LDI R24 , LOW ( 200 )
00091d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00091e 9701     +SBIW R24 , 1
00091f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000920 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
000921 932a      	ST   -Y,R18
000922 85ad      	LDD  R26,Y+13
000923 85be      	LDD  R27,Y+13+1
000924 85ef      	LDD  R30,Y+15
000925 89f8      	LDD  R31,Y+15+1
000926 9509      	ICALL
000927 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
000928 89e8      	LDD  R30,Y+16
000929 89f9      	LDD  R31,Y+16+1
00092a 9734      	SBIW R30,4
00092b 8be8      	STD  Y+16,R30
00092c 8bf9      	STD  Y+16+1,R31
00092d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
00092e 85ad      	LDD  R26,Y+13
00092f 85be      	LDD  R27,Y+13+1
000930 85ef      	LDD  R30,Y+15
000931 89f8      	LDD  R31,Y+15+1
000932 9509      	ICALL
000933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
000934 89a8      	LDD  R26,Y+16
000935 89b9      	LDD  R27,Y+16+1
000936 9614      	ADIW R26,4
000937 940e 09ae 	CALL __GETW1P
000939 83ee      	STD  Y+6,R30
00093a 83ff      	STD  Y+6+1,R31
00093b 81ae      	LDD  R26,Y+6
00093c 81bf      	LDD  R27,Y+6+1
00093d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
00093e 89a8      	LDD  R26,Y+16
00093f 89b9      	LDD  R27,Y+16+1
000940 9614      	ADIW R26,4
000941 940e 09ae 	CALL __GETW1P
000943 87ea      	STD  Y+10,R30
000944 87fb      	STD  Y+10+1,R31
000945 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000946 01de      	MOVW R26,R28
000947 961c      	ADIW R26,12
000948 940e 0957 	CALL __ADDW2R15
00094a 940e 09ae 	CALL __GETW1P
00094c 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00094d 9610      	adiw r26,0
00094e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00094f ed80     +LDI R24 , LOW ( 0x7D0 )
000950 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000951 9701     +SBIW R24 , 1
000952 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000953 95a8      	wdr
000954 9711      	sbiw r26,1
000955 f7c9      	brne __delay_ms0
                 __delay_ms1:
000956 9508      	ret
                 
                 __ADDW2R15:
000957 2400      	CLR  R0
000958 0daf      	ADD  R26,R15
000959 1db0      	ADC  R27,R0
00095a 9508      	RET
                 
                 __ADDD12:
00095b 0fea      	ADD  R30,R26
00095c 1ffb      	ADC  R31,R27
00095d 1f68      	ADC  R22,R24
00095e 1f79      	ADC  R23,R25
00095f 9508      	RET
                 
                 __ANEGW1:
000960 95f1      	NEG  R31
000961 95e1      	NEG  R30
000962 40f0      	SBCI R31,0
000963 9508      	RET
                 
                 __ANEGD1:
000964 95f0      	COM  R31
000965 9560      	COM  R22
000966 9570      	COM  R23
000967 95e1      	NEG  R30
000968 4fff      	SBCI R31,-1
000969 4f6f      	SBCI R22,-1
00096a 4f7f      	SBCI R23,-1
00096b 9508      	RET
                 
                 __LSLW2:
00096c 0fee      	LSL  R30
00096d 1fff      	ROL  R31
00096e 0fee      	LSL  R30
00096f 1fff      	ROL  R31
000970 9508      	RET
                 
                 __CWD1:
000971 2f6f      	MOV  R22,R31
000972 0f66      	ADD  R22,R22
000973 0b66      	SBC  R22,R22
000974 2f76      	MOV  R23,R22
000975 9508      	RET
                 
                 __MULD12U:
000976 9f7a      	MUL  R23,R26
000977 2d70      	MOV  R23,R0
000978 9f6b      	MUL  R22,R27
000979 0d70      	ADD  R23,R0
00097a 9ff8      	MUL  R31,R24
00097b 0d70      	ADD  R23,R0
00097c 9fe9      	MUL  R30,R25
00097d 0d70      	ADD  R23,R0
00097e 9f6a      	MUL  R22,R26
00097f 2d60      	MOV  R22,R0
000980 0d71      	ADD  R23,R1
000981 9ffb      	MUL  R31,R27
000982 0d60      	ADD  R22,R0
000983 1d71      	ADC  R23,R1
000984 9fe8      	MUL  R30,R24
000985 0d60      	ADD  R22,R0
000986 1d71      	ADC  R23,R1
000987 2788      	CLR  R24
000988 9ffa      	MUL  R31,R26
000989 2df0      	MOV  R31,R0
00098a 0d61      	ADD  R22,R1
00098b 1f78      	ADC  R23,R24
00098c 9feb      	MUL  R30,R27
00098d 0df0      	ADD  R31,R0
00098e 1d61      	ADC  R22,R1
00098f 1f78      	ADC  R23,R24
000990 9fea      	MUL  R30,R26
000991 2de0      	MOV  R30,R0
000992 0df1      	ADD  R31,R1
000993 1f68      	ADC  R22,R24
000994 1f78      	ADC  R23,R24
000995 9508      	RET
                 
                 __MULD12:
000996 d004      	RCALL __CHKSIGND
000997 dfde      	RCALL __MULD12U
000998 f40e      	BRTC __MULD121
000999 dfca      	RCALL __ANEGD1
                 __MULD121:
00099a 9508      	RET
                 
                 __CHKSIGND:
00099b 94e8      	CLT
00099c ff77      	SBRS R23,7
00099d c002      	RJMP __CHKSD1
00099e dfc5      	RCALL __ANEGD1
00099f 9468      	SET
                 __CHKSD1:
0009a0 ff97      	SBRS R25,7
0009a1 c00b      	RJMP __CHKSD2
0009a2 2400      	CLR  R0
0009a3 95a0      	COM  R26
0009a4 95b0      	COM  R27
0009a5 9580      	COM  R24
0009a6 9590      	COM  R25
0009a7 9611      	ADIW R26,1
0009a8 1d80      	ADC  R24,R0
0009a9 1d90      	ADC  R25,R0
0009aa f800      	BLD  R0,0
0009ab 9403      	INC  R0
0009ac fa00      	BST  R0,0
                 __CHKSD2:
0009ad 9508      	RET
                 
                 __GETW1P:
0009ae 91ed      	LD   R30,X+
0009af 91fc      	LD   R31,X
0009b0 9711      	SBIW R26,1
0009b1 9508      	RET
                 
                 __GETD1P:
0009b2 91ed      	LD   R30,X+
0009b3 91fd      	LD   R31,X+
0009b4 916d      	LD   R22,X+
0009b5 917c      	LD   R23,X
0009b6 9713      	SBIW R26,3
0009b7 9508      	RET
                 
                 __PUTDP1:
0009b8 93ed      	ST   X+,R30
0009b9 93fd      	ST   X+,R31
0009ba 936d      	ST   X+,R22
0009bb 937c      	ST   X,R23
0009bc 9508      	RET
                 
                 __GETW1PF:
0009bd 9005      	LPM  R0,Z+
0009be 91f4      	LPM  R31,Z
0009bf 2de0      	MOV  R30,R0
0009c0 9508      	RET
                 
                 __PUTPARD1:
0009c1 937a      	ST   -Y,R23
0009c2 936a      	ST   -Y,R22
0009c3 93fa      	ST   -Y,R31
0009c4 93ea      	ST   -Y,R30
0009c5 9508      	RET
                 
                 __CPD12:
0009c6 17ea      	CP   R30,R26
0009c7 07fb      	CPC  R31,R27
0009c8 0768      	CPC  R22,R24
0009c9 0779      	CPC  R23,R25
0009ca 9508      	RET
                 
                 __SAVELOCR6:
0009cb 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009cc 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009cd 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009ce 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009cf 931a      	ST   -Y,R17
0009d0 930a      	ST   -Y,R16
0009d1 9508      	RET
                 
                 __LOADLOCR6:
0009d2 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009d3 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009d4 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009d5 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009d6 8119      	LDD  R17,Y+1
0009d7 8108      	LD   R16,Y
0009d8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  31 r1 :   7 r2 :  62 r3 :   0 r4 :  27 r5 :   9 r6 :   4 r7 :   0 
r8 :   2 r9 :   0 r10:   7 r11:   1 r12:   6 r13:   3 r14:   0 r15:   4 
r16:  39 r17:  31 r18:  34 r19:  12 r20:   9 r21:  21 r22:  28 r23:  22 
r24:  41 r25:  15 r26: 220 r27: 122 r28:  17 r29:   1 r30: 327 r31: 136 
x  :  33 y  : 198 z  :  15 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :  18 
adiw  :  31 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :  44 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  27 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  41 brpl  :   1 brsh  :   3 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 217 
cbi   :  12 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :  17 clv   :   0 clz   :   0 com   :   7 
cp    :  15 cpc   :  15 cpi   :  35 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   1 jmp   :  39 ld    :  31 ldd   :  83 ldi   : 320 
lds   :  36 lpm   :  14 lsl   :   2 lsr   :   0 mov   :  25 movw  :  52 
mul   :  11 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   2 
ori   :   7 out   :  16 pop   :   7 push  :   7 rcall :  50 ret   :  55 
reti  :   0 rjmp  : 138 rol   :   2 ror   :   0 sbc   :   2 sbci  :   9 
sbi   :  16 sbic  :  18 sbis  :   2 sbiw  :  24 sbr   :   0 sbrc  :   4 
sbrs  :  29 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :  26 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  89 std   :  31 sts   :  37 sub   :   1 subi  :  22 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 64 out of 116 (55.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0013b2   4172    870   5042   32768  15.4%
[.dseg] 0x000060 0x0005a7      0    839    839    2048  41.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 10 warnings
