;/*******************************************************
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#include <stdio.h>
;
;
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;int z ;
;float  cel , F , vol;
;unsigned char c[20];
;void measure()
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016 
; 0000 0017                 ADMUX=(1<<REFS0)|(0<<REFS1);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0018                 ADCSRA=(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0019                 ADCSRA=(1<<ADEN);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001A                 ADMUX |=0b000;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001B                 ADCSRA|=(1<<ADSC);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001C                 while(!(ADCSRA & (1<<ADIF)));
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001D                 ADCSRA|=(1<<ADIF);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 001E 
; 0000 001F                 vol = (3.0*ADCW)/615.0 ;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0020 
; 0000 0021                 cel = vol/0.01  ;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0022                 z = cel/1 ;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0023                 F = (z*1.8) + 32 ;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0024 
; 0000 0025 
; 0000 0026 
; 0000 0027 }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;
;void main(void)
; 0000 002A {
;PCODE: $0000003C VOL: 0
; 0000 002B // ADC initialization
; 0000 002C // ADC Clock frequency: 1000.000 kHz
; 0000 002D // ADC Voltage Reference: AREF pin
; 0000 002E // ADC Auto Trigger Source: ADC Stopped
; 0000 002F ADMUX=ADC_VREF_TYPE;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0030 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0031 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0032 
; 0000 0033 lcd_init(20);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0034 
; 0000 0035 while (1)
;PCODE: $00000045 VOL: 0
; 0000 0036       {
; 0000 0037             measure();
;PCODE: $00000046 VOL: 0
; 0000 0038             if(PINC.0 == 1)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0039             {
; 0000 003A             sprintf(c,"Temp = %4.2f 'F",F);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003B             }
; 0000 003C             else
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003D             {
; 0000 003E             sprintf(c,"Temp = %3.0f 'C",cel);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003F             }
;PCODE: $00000062 VOL: 0
; 0000 0040             lcd_puts(c);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0041             delay_ms(500);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0042             lcd_clear();
;PCODE: $00000067 VOL: 0
; 0000 0043       }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0044 }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
