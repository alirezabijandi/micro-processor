
AVRASM ver. 2.1.30  D:\projects\QUESTION\parsa rajabi\hello world\Debug\List\hello.asm Fri Apr 30 01:49:12 2021

D:\projects\QUESTION\parsa rajabi\hello world\Debug\List\hello.asm(1088): warning: Register r4 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\hello world\Debug\List\hello.asm(1089): warning: Register r5 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\hello world\Debug\List\hello.asm(1090): warning: Register r7 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\hello world\Debug\List\hello.asm(1091): warning: Register r6 already defined by the .DEF directive
D:\projects\QUESTION\parsa rajabi\hello world\Debug\List\hello.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0042 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000033 0000      	.DW  0x0000
                 
                 _0x0:
000034 6548
000035 6c6c
000036 206f
000037 6f57      	.DB  0x48,0x65,0x6C,0x6C,0x6F,0x20,0x57,0x6F
000038 6c72
000039 0064      	.DB  0x72,0x6C,0x64,0x0
                 _0x2000003:
00003a c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003b 0001      	.DW  0x01
00003c 0002      	.DW  0x02
00003d 0066      	.DW  __REG_BIT_VARS*2
                 
00003e 0002      	.DW  0x02
00003f 0274      	.DW  __base_y_G100
000040 0074      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000041 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000042 94f8      	CLI
000043 27ee      	CLR  R30
000044 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000045 e0f1      	LDI  R31,1
000046 bffb      	OUT  GICR,R31
000047 bfeb      	OUT  GICR,R30
000048 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000049 e08d      	LDI  R24,(14-2)+1
00004a e0a2      	LDI  R26,2
00004b 27bb      	CLR  R27
                 __CLEAR_REG:
00004c 93ed      	ST   X+,R30
00004d 958a      	DEC  R24
00004e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000050 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000051 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000052 93ed      	ST   X+,R30
000053 9701      	SBIW R24,1
000054 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000055 e7e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000056 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000057 9185      	LPM  R24,Z+
000058 9195      	LPM  R25,Z+
000059 9700      	SBIW R24,0
00005a f061      	BREQ __GLOBAL_INI_END
00005b 91a5      	LPM  R26,Z+
00005c 91b5      	LPM  R27,Z+
00005d 9005      	LPM  R0,Z+
00005e 9015      	LPM  R1,Z+
00005f 01bf      	MOVW R22,R30
000060 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000061 9005      	LPM  R0,Z+
000062 920d      	ST   X+,R0
000063 9701      	SBIW R24,1
000064 f7e1      	BRNE __GLOBAL_INI_LOOP
000065 01fb      	MOVW R30,R22
000066 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000067 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000068 bfed      	OUT  SPL,R30
000069 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006d 940c 006f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Chip type               : ATmega32
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*******************************************************/
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;bit row ;
                 ;int i ;
                 ;unsigned char c[20];
                 ;
                 ;void main(void)
                 ; 0000 0014 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0015 lcd_init(20);
00006f e1a4      	LDI  R26,LOW(20)
000070 d097      	RCALL _lcd_init
                 ; 0000 0016 
                 ; 0000 0017 sprintf(c,"Hello World");
000071 e6e0      	LDI  R30,LOW(_c)
000072 e0f2      	LDI  R31,HIGH(_c)
000073 93fa      	ST   -Y,R31
000074 93ea      	ST   -Y,R30
                +
000075 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000076 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000077 93fa      	ST   -Y,R31
000078 93ea      	ST   -Y,R30
000079 e080      	LDI  R24,0
00007a 940e 02ab 	CALL _sprintf
00007c 9624      	ADIW R28,4
                 ; 0000 0018 
                 ; 0000 0019 while (1)
                 _0x3:
                 ; 0000 001A       {
                 ; 0000 001B             delay_ms(500);
00007d efa4      	LDI  R26,LOW(500)
00007e e0b1      	LDI  R27,HIGH(500)
00007f 940e 0332 	CALL _delay_ms
                 ; 0000 001C 
                 ; 0000 001D             lcd_clear();
000081 d054      	RCALL _lcd_clear
                 ; 0000 001E             lcd_gotoxy(i,row);
000082 924a      	ST   -Y,R4
000083 e0a0      	LDI  R26,0
000084 fc20      	SBRC R2,0
000085 e0a1      	LDI  R26,1
000086 d042      	RCALL _lcd_gotoxy
                 ; 0000 001F             lcd_puts(c);
000087 e6a0      	LDI  R26,LOW(_c)
000088 e0b2      	LDI  R27,HIGH(_c)
000089 d06d      	RCALL _lcd_puts
                 ; 0000 0020 
                 ; 0000 0021             row =! row;
00008a e0e1      	LDI  R30,LOW(1)
00008b 262e      	EOR  R2,R30
                 ; 0000 0022             i+= 2 ;
00008c 01f2      	MOVW R30,R4
00008d 9632      	ADIW R30,2
00008e 012f      	MOVW R4,R30
                 ; 0000 0023             if(i>9) i = 0 ;
00008f e0e9      	LDI  R30,LOW(9)
000090 e0f0      	LDI  R31,HIGH(9)
000091 15e4      	CP   R30,R4
000092 05f5      	CPC  R31,R5
000093 f414      	BRGE _0x6
000094 2444      	CLR  R4
000095 2455      	CLR  R5
                 ; 0000 0024 
                 ; 0000 0025       }
                 _0x6:
000096 cfe6      	RJMP _0x3
                 ; 0000 0026 }
                 _0x7:
000097 cfff      	RJMP _0x7
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000098 93aa      	ST   -Y,R26
000099 81e8      	LD   R30,Y
00009a 71e0      	ANDI R30,LOW(0x10)
00009b f011      	BREQ _0x2000004
00009c 9adb      	SBI  0x1B,3
00009d c001      	RJMP _0x2000005
                 _0x2000004:
00009e 98db      	CBI  0x1B,3
                 _0x2000005:
00009f 81e8      	LD   R30,Y
0000a0 72e0      	ANDI R30,LOW(0x20)
0000a1 f011      	BREQ _0x2000006
0000a2 9adc      	SBI  0x1B,4
0000a3 c001      	RJMP _0x2000007
                 _0x2000006:
0000a4 98dc      	CBI  0x1B,4
                 _0x2000007:
0000a5 81e8      	LD   R30,Y
0000a6 74e0      	ANDI R30,LOW(0x40)
0000a7 f011      	BREQ _0x2000008
0000a8 9add      	SBI  0x1B,5
0000a9 c001      	RJMP _0x2000009
                 _0x2000008:
0000aa 98dd      	CBI  0x1B,5
                 _0x2000009:
0000ab 81e8      	LD   R30,Y
0000ac 78e0      	ANDI R30,LOW(0x80)
0000ad f011      	BREQ _0x200000A
0000ae 9ade      	SBI  0x1B,6
0000af c001      	RJMP _0x200000B
                 _0x200000A:
0000b0 98de      	CBI  0x1B,6
                 _0x200000B:
                +
0000b1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b2 958a     +DEC R24
0000b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b4 9ada      	SBI  0x1B,2
                +
0000b5 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b6 958a     +DEC R24
0000b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b8 98da      	CBI  0x1B,2
                +
0000b9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ba 958a     +DEC R24
0000bb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000bc c078      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000bd 93aa      	ST   -Y,R26
0000be 81a8      	LD   R26,Y
0000bf dfd8      	RCALL __lcd_write_nibble_G100
0000c0 81e8          ld    r30,y
0000c1 95e2          swap  r30
0000c2 83e8          st    y,r30
0000c3 81a8      	LD   R26,Y
0000c4 dfd3      	RCALL __lcd_write_nibble_G100
                +
0000c5 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000c6 958a     +DEC R24
0000c7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000c8 c06c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000c9 93aa      	ST   -Y,R26
0000ca 81e8      	LD   R30,Y
0000cb e0f0      	LDI  R31,0
0000cc 58ec      	SUBI R30,LOW(-__base_y_G100)
0000cd 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000ce 81e0      	LD   R30,Z
0000cf 81a9      	LDD  R26,Y+1
0000d0 0fae      	ADD  R26,R30
0000d1 dfeb      	RCALL __lcd_write_data
0000d2 8079      	LDD  R7,Y+1
0000d3 8068      	LDD  R6,Y+0
0000d4 9622      	ADIW R28,2
0000d5 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000d6 e0a2      	LDI  R26,LOW(2)
0000d7 940e 02f8 	CALL SUBOPT_0x0
0000d9 e0ac      	LDI  R26,LOW(12)
0000da dfe2      	RCALL __lcd_write_data
0000db e0a1      	LDI  R26,LOW(1)
0000dc 940e 02f8 	CALL SUBOPT_0x0
0000de e0e0      	LDI  R30,LOW(0)
0000df 2e6e      	MOV  R6,R30
0000e0 2e7e      	MOV  R7,R30
0000e1 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000e2 93aa      	ST   -Y,R26
0000e3 81a8      	LD   R26,Y
0000e4 30aa      	CPI  R26,LOW(0xA)
0000e5 f011      	BREQ _0x2000011
0000e6 1479      	CP   R7,R9
0000e7 f048      	BRLO _0x2000010
                 _0x2000011:
0000e8 e0e0      	LDI  R30,LOW(0)
0000e9 93ea      	ST   -Y,R30
0000ea 9463      	INC  R6
0000eb 2da6      	MOV  R26,R6
0000ec dfdc      	RCALL _lcd_gotoxy
0000ed 81a8      	LD   R26,Y
0000ee 30aa      	CPI  R26,LOW(0xA)
0000ef f409      	BRNE _0x2000013
0000f0 c044      	RJMP _0x2080002
                 _0x2000013:
                 _0x2000010:
0000f1 9473      	INC  R7
0000f2 9ad8      	SBI  0x1B,0
0000f3 81a8      	LD   R26,Y
0000f4 dfc8      	RCALL __lcd_write_data
0000f5 98d8      	CBI  0x1B,0
0000f6 c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000f7 93ba      	ST   -Y,R27
0000f8 93aa      	ST   -Y,R26
0000f9 931a      	ST   -Y,R17
                 _0x2000014:
0000fa 81a9      	LDD  R26,Y+1
0000fb 81ba      	LDD  R27,Y+1+1
0000fc 91ed      	LD   R30,X+
0000fd 83a9      	STD  Y+1,R26
0000fe 83ba      	STD  Y+1+1,R27
0000ff 2f1e      	MOV  R17,R30
000100 30e0      	CPI  R30,0
000101 f019      	BREQ _0x2000016
000102 2fa1      	MOV  R26,R17
000103 dfde      	RCALL _lcd_putchar
000104 cff5      	RJMP _0x2000014
                 _0x2000016:
000105 8118      	LDD  R17,Y+0
000106 9623      	ADIW R28,3
000107 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000108 93aa      	ST   -Y,R26
000109 9ad3      	SBI  0x1A,3
00010a 9ad4      	SBI  0x1A,4
00010b 9ad5      	SBI  0x1A,5
00010c 9ad6      	SBI  0x1A,6
00010d 9ad2      	SBI  0x1A,2
00010e 9ad0      	SBI  0x1A,0
00010f 9ad1      	SBI  0x1A,1
000110 98da      	CBI  0x1B,2
000111 98d8      	CBI  0x1B,0
000112 98d9      	CBI  0x1B,1
000113 8098      	LDD  R9,Y+0
000114 81e8      	LD   R30,Y
000115 58e0      	SUBI R30,-LOW(128)
                +
000116 93e0 0276+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000118 81e8      	LD   R30,Y
000119 54e0      	SUBI R30,-LOW(192)
                +
00011a 93e0 0277+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00011c e1a4      	LDI  R26,LOW(20)
00011d e0b0      	LDI  R27,0
00011e 940e 0332 	CALL _delay_ms
000120 940e 02fe 	CALL SUBOPT_0x1
000122 940e 02fe 	CALL SUBOPT_0x1
000124 940e 02fe 	CALL SUBOPT_0x1
000126 e2a0      	LDI  R26,LOW(32)
000127 df70      	RCALL __lcd_write_nibble_G100
                +
000128 ec88     +LDI R24 , LOW ( 200 )
000129 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00012a 9701     +SBIW R24 , 1
00012b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00012c e2a8      	LDI  R26,LOW(40)
00012d df8f      	RCALL __lcd_write_data
00012e e0a4      	LDI  R26,LOW(4)
00012f df8d      	RCALL __lcd_write_data
000130 e8a5      	LDI  R26,LOW(133)
000131 df8b      	RCALL __lcd_write_data
000132 e0a6      	LDI  R26,LOW(6)
000133 df89      	RCALL __lcd_write_data
000134 dfa1      	RCALL _lcd_clear
                 _0x2080002:
000135 9621      	ADIW R28,1
000136 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000137 93ba      	ST   -Y,R27
000138 93aa      	ST   -Y,R26
000139 931a      	ST   -Y,R17
00013a 930a      	ST   -Y,R16
00013b 81aa      	LDD  R26,Y+2
00013c 81bb      	LDD  R27,Y+2+1
00013d 9612      	ADIW R26,2
00013e 940e 0344 	CALL __GETW1P
000140 9730      	SBIW R30,0
000141 f159      	BREQ _0x2020010
000142 81aa      	LDD  R26,Y+2
000143 81bb      	LDD  R27,Y+2+1
000144 9614      	ADIW R26,4
000145 940e 0344 	CALL __GETW1P
000147 018f      	MOVW R16,R30
000148 9730      	SBIW R30,0
000149 f061      	BREQ _0x2020012
                +
00014a 3002     +CPI R16 , LOW ( 2 )
00014b e0e0     +LDI R30 , HIGH ( 2 )
00014c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00014d f098      	BRLO _0x2020013
00014e 01f8      	MOVW R30,R16
00014f 9731      	SBIW R30,1
000150 018f      	MOVW R16,R30
                +
000151 81aa     +LDD R26 , Y + 2
000152 81bb     +LDD R27 , Y + 2 + 1
000153 9614     +ADIW R26 , 4
000154 93ed     +ST X + , R30
000155 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000156 81aa      	LDD  R26,Y+2
000157 81bb      	LDD  R27,Y+2+1
000158 9612      	ADIW R26,2
000159 91ed      	LD   R30,X+
00015a 91fd      	LD   R31,X+
00015b 9631      	ADIW R30,1
00015c 93fe      	ST   -X,R31
00015d 93ee      	ST   -X,R30
00015e 9731      	SBIW R30,1
00015f 81ac      	LDD  R26,Y+4
000160 83a0      	STD  Z+0,R26
                 _0x2020013:
000161 81aa      	LDD  R26,Y+2
000162 81bb      	LDD  R27,Y+2+1
000163 940e 0344 	CALL __GETW1P
000165 23ff      	TST  R31
000166 f02a      	BRMI _0x2020014
000167 91ed      	LD   R30,X+
000168 91fd      	LD   R31,X+
000169 9631      	ADIW R30,1
00016a 93fe      	ST   -X,R31
00016b 93ee      	ST   -X,R30
                 _0x2020014:
00016c c006      	RJMP _0x2020015
                 _0x2020010:
00016d 81aa      	LDD  R26,Y+2
00016e 81bb      	LDD  R27,Y+2+1
00016f efef      	LDI  R30,LOW(65535)
000170 efff      	LDI  R31,HIGH(65535)
000171 93ed      	ST   X+,R30
000172 93fc      	ST   X,R31
                 _0x2020015:
000173 8119      	LDD  R17,Y+1
000174 8108      	LDD  R16,Y+0
000175 9625      	ADIW R28,5
000176 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000177 93ba      	ST   -Y,R27
000178 93aa      	ST   -Y,R26
000179 9726      	SBIW R28,6
00017a 940e 034c 	CALL __SAVELOCR6
00017c e010      	LDI  R17,0
00017d 85ac      	LDD  R26,Y+12
00017e 85bd      	LDD  R27,Y+12+1
00017f e0e0      	LDI  R30,LOW(0)
000180 e0f0      	LDI  R31,HIGH(0)
000181 93ed      	ST   X+,R30
000182 93fc      	ST   X,R31
                 _0x2020016:
000183 89ea      	LDD  R30,Y+18
000184 89fb      	LDD  R31,Y+18+1
000185 9631      	ADIW R30,1
000186 8bea      	STD  Y+18,R30
000187 8bfb      	STD  Y+18+1,R31
000188 9731      	SBIW R30,1
000189 91e4      	LPM  R30,Z
00018a 2f2e      	MOV  R18,R30
00018b 30e0      	CPI  R30,0
00018c f409      	BRNE PC+2
00018d c115      	RJMP _0x2020018
00018e 2fe1      	MOV  R30,R17
00018f 30e0      	CPI  R30,0
000190 f439      	BRNE _0x202001C
000191 3225      	CPI  R18,37
000192 f411      	BRNE _0x202001D
000193 e011      	LDI  R17,LOW(1)
000194 c002      	RJMP _0x202001E
                 _0x202001D:
000195 940e 0306 	CALL SUBOPT_0x2
                 _0x202001E:
000197 c10a      	RJMP _0x202001B
                 _0x202001C:
000198 30e1      	CPI  R30,LOW(0x1)
000199 f4a9      	BRNE _0x202001F
00019a 3225      	CPI  R18,37
00019b f419      	BRNE _0x2020020
00019c 940e 0306 	CALL SUBOPT_0x2
00019e c102      	RJMP _0x20200CC
                 _0x2020020:
00019f e012      	LDI  R17,LOW(2)
0001a0 e040      	LDI  R20,LOW(0)
0001a1 e000      	LDI  R16,LOW(0)
0001a2 322d      	CPI  R18,45
0001a3 f411      	BRNE _0x2020021
0001a4 e001      	LDI  R16,LOW(1)
0001a5 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001a6 322b      	CPI  R18,43
0001a7 f411      	BRNE _0x2020022
0001a8 e24b      	LDI  R20,LOW(43)
0001a9 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001aa 3220      	CPI  R18,32
0001ab f411      	BRNE _0x2020023
0001ac e240      	LDI  R20,LOW(32)
0001ad c0f4      	RJMP _0x202001B
                 _0x2020023:
0001ae c002      	RJMP _0x2020024
                 _0x202001F:
0001af 30e2      	CPI  R30,LOW(0x2)
0001b0 f439      	BRNE _0x2020025
                 _0x2020024:
0001b1 e050      	LDI  R21,LOW(0)
0001b2 e013      	LDI  R17,LOW(3)
0001b3 3320      	CPI  R18,48
0001b4 f411      	BRNE _0x2020026
0001b5 6800      	ORI  R16,LOW(128)
0001b6 c0eb      	RJMP _0x202001B
                 _0x2020026:
0001b7 c003      	RJMP _0x2020027
                 _0x2020025:
0001b8 30e3      	CPI  R30,LOW(0x3)
0001b9 f009      	BREQ PC+2
0001ba c0e7      	RJMP _0x202001B
                 _0x2020027:
0001bb 3320      	CPI  R18,48
0001bc f010      	BRLO _0x202002A
0001bd 332a      	CPI  R18,58
0001be f008      	BRLO _0x202002B
                 _0x202002A:
0001bf c007      	RJMP _0x2020029
                 _0x202002B:
0001c0 e0aa      	LDI  R26,LOW(10)
0001c1 9f5a      	MUL  R21,R26
0001c2 2d50      	MOV  R21,R0
0001c3 2fe2      	MOV  R30,R18
0001c4 53e0      	SUBI R30,LOW(48)
0001c5 0f5e      	ADD  R21,R30
0001c6 c0db      	RJMP _0x202001B
                 _0x2020029:
0001c7 2fe2      	MOV  R30,R18
0001c8 36e3      	CPI  R30,LOW(0x63)
0001c9 f449      	BRNE _0x202002F
0001ca 940e 030d 	CALL SUBOPT_0x3
0001cc 89e8      	LDD  R30,Y+16
0001cd 89f9      	LDD  R31,Y+16+1
0001ce 81a4      	LDD  R26,Z+4
0001cf 93aa      	ST   -Y,R26
0001d0 940e 0313 	CALL SUBOPT_0x4
0001d2 c0ce      	RJMP _0x2020030
                 _0x202002F:
0001d3 37e3      	CPI  R30,LOW(0x73)
0001d4 f441      	BRNE _0x2020032
0001d5 940e 030d 	CALL SUBOPT_0x3
0001d7 940e 0319 	CALL SUBOPT_0x5
0001d9 940e 02df 	CALL _strlen
0001db 2f1e      	MOV  R17,R30
0001dc c00a      	RJMP _0x2020033
                 _0x2020032:
0001dd 37e0      	CPI  R30,LOW(0x70)
0001de f461      	BRNE _0x2020035
0001df 940e 030d 	CALL SUBOPT_0x3
0001e1 940e 0319 	CALL SUBOPT_0x5
0001e3 940e 02eb 	CALL _strlenf
0001e5 2f1e      	MOV  R17,R30
0001e6 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001e7 6002      	ORI  R16,LOW(2)
0001e8 770f      	ANDI R16,LOW(127)
0001e9 e030      	LDI  R19,LOW(0)
0001ea c034      	RJMP _0x2020036
                 _0x2020035:
0001eb 36e4      	CPI  R30,LOW(0x64)
0001ec f011      	BREQ _0x2020039
0001ed 36e9      	CPI  R30,LOW(0x69)
0001ee f411      	BRNE _0x202003A
                 _0x2020039:
0001ef 6004      	ORI  R16,LOW(4)
0001f0 c002      	RJMP _0x202003B
                 _0x202003A:
0001f1 37e5      	CPI  R30,LOW(0x75)
0001f2 f431      	BRNE _0x202003C
                 _0x202003B:
0001f3 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001f4 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001f5 83ee      	STD  Y+6,R30
0001f6 83ff      	STD  Y+6+1,R31
0001f7 e015      	LDI  R17,LOW(5)
0001f8 c00c      	RJMP _0x202003D
                 _0x202003C:
0001f9 35e8      	CPI  R30,LOW(0x58)
0001fa f411      	BRNE _0x202003F
0001fb 6008      	ORI  R16,LOW(8)
0001fc c003      	RJMP _0x2020040
                 _0x202003F:
0001fd 37e8      	CPI  R30,LOW(0x78)
0001fe f009      	BREQ PC+2
0001ff c0a1      	RJMP _0x2020071
                 _0x2020040:
000200 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000201 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000202 83ee      	STD  Y+6,R30
000203 83ff      	STD  Y+6+1,R31
000204 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000205 ff02      	SBRS R16,2
000206 c014      	RJMP _0x2020042
000207 940e 030d 	CALL SUBOPT_0x3
000209 940e 0323 	CALL SUBOPT_0x6
00020b 85ab      	LDD  R26,Y+11
00020c 23aa      	TST  R26
00020d f43a      	BRPL _0x2020043
00020e 85ea      	LDD  R30,Y+10
00020f 85fb      	LDD  R31,Y+10+1
000210 940e 0340 	CALL __ANEGW1
000212 87ea      	STD  Y+10,R30
000213 87fb      	STD  Y+10+1,R31
000214 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000215 3040      	CPI  R20,0
000216 f011      	BREQ _0x2020044
000217 5f1f      	SUBI R17,-LOW(1)
000218 c001      	RJMP _0x2020045
                 _0x2020044:
000219 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00021a c004      	RJMP _0x2020046
                 _0x2020042:
00021b 940e 030d 	CALL SUBOPT_0x3
00021d 940e 0323 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
00021f fd00      	SBRC R16,0
000220 c011      	RJMP _0x2020047
                 _0x2020048:
000221 1715      	CP   R17,R21
000222 f478      	BRSH _0x202004A
000223 ff07      	SBRS R16,7
000224 c008      	RJMP _0x202004B
000225 ff02      	SBRS R16,2
000226 c004      	RJMP _0x202004C
000227 7f0b      	ANDI R16,LOW(251)
000228 2f24      	MOV  R18,R20
000229 5011      	SUBI R17,LOW(1)
00022a c001      	RJMP _0x202004D
                 _0x202004C:
00022b e320      	LDI  R18,LOW(48)
                 _0x202004D:
00022c c001      	RJMP _0x202004E
                 _0x202004B:
00022d e220      	LDI  R18,LOW(32)
                 _0x202004E:
00022e 940e 0306 	CALL SUBOPT_0x2
000230 5051      	SUBI R21,LOW(1)
000231 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000232 2f31      	MOV  R19,R17
000233 ff01      	SBRS R16,1
000234 c017      	RJMP _0x202004F
                 _0x2020050:
000235 3030      	CPI  R19,0
000236 f0a1      	BREQ _0x2020052
000237 ff03      	SBRS R16,3
000238 c006      	RJMP _0x2020053
000239 81ee      	LDD  R30,Y+6
00023a 81ff      	LDD  R31,Y+6+1
00023b 9125      	LPM  R18,Z+
00023c 83ee      	STD  Y+6,R30
00023d 83ff      	STD  Y+6+1,R31
00023e c005      	RJMP _0x2020054
                 _0x2020053:
00023f 81ae      	LDD  R26,Y+6
000240 81bf      	LDD  R27,Y+6+1
000241 912d      	LD   R18,X+
000242 83ae      	STD  Y+6,R26
000243 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000244 940e 0306 	CALL SUBOPT_0x2
000246 3050      	CPI  R21,0
000247 f009      	BREQ _0x2020055
000248 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000249 5031      	SUBI R19,LOW(1)
00024a cfea      	RJMP _0x2020050
                 _0x2020052:
00024b c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00024c e320      	LDI  R18,LOW(48)
00024d 81ee      	LDD  R30,Y+6
00024e 81ff      	LDD  R31,Y+6+1
00024f 940e 0348 	CALL __GETW1PF
000251 87e8      	STD  Y+8,R30
000252 87f9      	STD  Y+8+1,R31
000253 81ee      	LDD  R30,Y+6
000254 81ff      	LDD  R31,Y+6+1
000255 9632      	ADIW R30,2
000256 83ee      	STD  Y+6,R30
000257 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000258 85e8      	LDD  R30,Y+8
000259 85f9      	LDD  R31,Y+8+1
00025a 85aa      	LDD  R26,Y+10
00025b 85bb      	LDD  R27,Y+10+1
00025c 17ae      	CP   R26,R30
00025d 07bf      	CPC  R27,R31
00025e f050      	BRLO _0x202005C
00025f 5f2f      	SUBI R18,-LOW(1)
000260 85a8      	LDD  R26,Y+8
000261 85b9      	LDD  R27,Y+8+1
000262 85ea      	LDD  R30,Y+10
000263 85fb      	LDD  R31,Y+10+1
000264 1bea      	SUB  R30,R26
000265 0bfb      	SBC  R31,R27
000266 87ea      	STD  Y+10,R30
000267 87fb      	STD  Y+10+1,R31
000268 cfef      	RJMP _0x202005A
                 _0x202005C:
000269 332a      	CPI  R18,58
00026a f028      	BRLO _0x202005D
00026b ff03      	SBRS R16,3
00026c c002      	RJMP _0x202005E
00026d 5f29      	SUBI R18,-LOW(7)
00026e c001      	RJMP _0x202005F
                 _0x202005E:
00026f 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000270 fd04      	SBRC R16,4
000271 c01a      	RJMP _0x2020061
000272 3321      	CPI  R18,49
000273 f420      	BRSH _0x2020063
000274 85a8      	LDD  R26,Y+8
000275 85b9      	LDD  R27,Y+8+1
000276 9711      	SBIW R26,1
000277 f409      	BRNE _0x2020062
                 _0x2020063:
000278 c009      	RJMP _0x20200CD
                 _0x2020062:
000279 1753      	CP   R21,R19
00027a f010      	BRLO _0x2020067
00027b ff00      	SBRS R16,0
00027c c001      	RJMP _0x2020068
                 _0x2020067:
00027d c013      	RJMP _0x2020066
                 _0x2020068:
00027e e220      	LDI  R18,LOW(32)
00027f ff07      	SBRS R16,7
000280 c00b      	RJMP _0x2020069
000281 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000282 6100      	ORI  R16,LOW(16)
000283 ff02      	SBRS R16,2
000284 c007      	RJMP _0x202006A
000285 7f0b      	ANDI R16,LOW(251)
000286 934a      	ST   -Y,R20
000287 940e 0313 	CALL SUBOPT_0x4
000289 3050      	CPI  R21,0
00028a f009      	BREQ _0x202006B
00028b 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00028c 940e 0306 	CALL SUBOPT_0x2
00028e 3050      	CPI  R21,0
00028f f009      	BREQ _0x202006C
000290 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000291 5031      	SUBI R19,LOW(1)
000292 85a8      	LDD  R26,Y+8
000293 85b9      	LDD  R27,Y+8+1
000294 9712      	SBIW R26,2
000295 f008      	BRLO _0x2020059
000296 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000297 ff00      	SBRS R16,0
000298 c008      	RJMP _0x202006D
                 _0x202006E:
000299 3050      	CPI  R21,0
00029a f031      	BREQ _0x2020070
00029b 5051      	SUBI R21,LOW(1)
00029c e2e0      	LDI  R30,LOW(32)
00029d 93ea      	ST   -Y,R30
00029e 940e 0313 	CALL SUBOPT_0x4
0002a0 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002a1 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002a2 cee0      	RJMP _0x2020016
                 _0x2020018:
0002a3 85ac      	LDD  R26,Y+12
0002a4 85bd      	LDD  R27,Y+12+1
0002a5 940e 0344 	CALL __GETW1P
0002a7 940e 0353 	CALL __LOADLOCR6
0002a9 9664      	ADIW R28,20
0002aa 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002ab 92ff      	PUSH R15
0002ac 2ef8      	MOV  R15,R24
0002ad 9726      	SBIW R28,6
0002ae 940e 034e 	CALL __SAVELOCR4
0002b0 940e 032b 	CALL SUBOPT_0x7
0002b2 9730      	SBIW R30,0
0002b3 f419      	BRNE _0x2020072
0002b4 efef      	LDI  R30,LOW(65535)
0002b5 efff      	LDI  R31,HIGH(65535)
0002b6 c023      	RJMP _0x2080001
                 _0x2020072:
0002b7 01de      	MOVW R26,R28
0002b8 9616      	ADIW R26,6
0002b9 940e 033c 	CALL __ADDW2R15
0002bb 018d      	MOVW R16,R26
0002bc 940e 032b 	CALL SUBOPT_0x7
0002be 83ee      	STD  Y+6,R30
0002bf 83ff      	STD  Y+6+1,R31
0002c0 e0e0      	LDI  R30,LOW(0)
0002c1 87e8      	STD  Y+8,R30
0002c2 87e9      	STD  Y+8+1,R30
0002c3 01de      	MOVW R26,R28
0002c4 961a      	ADIW R26,10
0002c5 940e 033c 	CALL __ADDW2R15
0002c7 940e 0344 	CALL __GETW1P
0002c9 93fa      	ST   -Y,R31
0002ca 93ea      	ST   -Y,R30
0002cb 931a      	ST   -Y,R17
0002cc 930a      	ST   -Y,R16
0002cd e3e7      	LDI  R30,LOW(_put_buff_G101)
0002ce e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002cf 93fa      	ST   -Y,R31
0002d0 93ea      	ST   -Y,R30
0002d1 01de      	MOVW R26,R28
0002d2 961a      	ADIW R26,10
0002d3 dea3      	RCALL __print_G101
0002d4 019f      	MOVW R18,R30
0002d5 81ae      	LDD  R26,Y+6
0002d6 81bf      	LDD  R27,Y+6+1
0002d7 e0e0      	LDI  R30,LOW(0)
0002d8 93ec      	ST   X,R30
0002d9 01f9      	MOVW R30,R18
                 _0x2080001:
0002da 940e 0355 	CALL __LOADLOCR4
0002dc 962a      	ADIW R28,10
0002dd 90ff      	POP  R15
0002de 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002df 93ba      	ST   -Y,R27
0002e0 93aa      	ST   -Y,R26
0002e1 91a9          ld   r26,y+
0002e2 91b9          ld   r27,y+
0002e3 27ee          clr  r30
0002e4 27ff          clr  r31
                 strlen0:
0002e5 916d          ld   r22,x+
0002e6 2366          tst  r22
0002e7 f011          breq strlen1
0002e8 9631          adiw r30,1
0002e9 cffb          rjmp strlen0
                 strlen1:
0002ea 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002eb 93ba      	ST   -Y,R27
0002ec 93aa      	ST   -Y,R26
0002ed 27aa          clr  r26
0002ee 27bb          clr  r27
0002ef 91e9          ld   r30,y+
0002f0 91f9          ld   r31,y+
                 strlenf0:
0002f1 9005      	lpm  r0,z+
0002f2 2000          tst  r0
0002f3 f011          breq strlenf1
0002f4 9611          adiw r26,1
0002f5 cffb          rjmp strlenf0
                 strlenf1:
0002f6 01fd          movw r30,r26
0002f7 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _c:
000260           	.BYTE 0x14
                 __base_y_G100:
000274           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002f8 940e 00bd 	CALL __lcd_write_data
0002fa e0a3      	LDI  R26,LOW(3)
0002fb e0b0      	LDI  R27,0
0002fc 940c 0332 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
0002fe e3a0      	LDI  R26,LOW(48)
0002ff 940e 0098 	CALL __lcd_write_nibble_G100
                +
000301 ec88     +LDI R24 , LOW ( 200 )
000302 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000303 9701     +SBIW R24 , 1
000304 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000305 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000306 932a      	ST   -Y,R18
000307 85ad      	LDD  R26,Y+13
000308 85be      	LDD  R27,Y+13+1
000309 85ef      	LDD  R30,Y+15
00030a 89f8      	LDD  R31,Y+15+1
00030b 9509      	ICALL
00030c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
00030d 89e8      	LDD  R30,Y+16
00030e 89f9      	LDD  R31,Y+16+1
00030f 9734      	SBIW R30,4
000310 8be8      	STD  Y+16,R30
000311 8bf9      	STD  Y+16+1,R31
000312 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000313 85ad      	LDD  R26,Y+13
000314 85be      	LDD  R27,Y+13+1
000315 85ef      	LDD  R30,Y+15
000316 89f8      	LDD  R31,Y+15+1
000317 9509      	ICALL
000318 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000319 89a8      	LDD  R26,Y+16
00031a 89b9      	LDD  R27,Y+16+1
00031b 9614      	ADIW R26,4
00031c 940e 0344 	CALL __GETW1P
00031e 83ee      	STD  Y+6,R30
00031f 83ff      	STD  Y+6+1,R31
000320 81ae      	LDD  R26,Y+6
000321 81bf      	LDD  R27,Y+6+1
000322 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000323 89a8      	LDD  R26,Y+16
000324 89b9      	LDD  R27,Y+16+1
000325 9614      	ADIW R26,4
000326 940e 0344 	CALL __GETW1P
000328 87ea      	STD  Y+10,R30
000329 87fb      	STD  Y+10+1,R31
00032a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00032b 01de      	MOVW R26,R28
00032c 961c      	ADIW R26,12
00032d 940e 033c 	CALL __ADDW2R15
00032f 940e 0344 	CALL __GETW1P
000331 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000332 9610      	adiw r26,0
000333 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000334 ed80     +LDI R24 , LOW ( 0x7D0 )
000335 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000336 9701     +SBIW R24 , 1
000337 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000338 95a8      	wdr
000339 9711      	sbiw r26,1
00033a f7c9      	brne __delay_ms0
                 __delay_ms1:
00033b 9508      	ret
                 
                 __ADDW2R15:
00033c 2400      	CLR  R0
00033d 0daf      	ADD  R26,R15
00033e 1db0      	ADC  R27,R0
00033f 9508      	RET
                 
                 __ANEGW1:
000340 95f1      	NEG  R31
000341 95e1      	NEG  R30
000342 40f0      	SBCI R31,0
000343 9508      	RET
                 
                 __GETW1P:
000344 91ed      	LD   R30,X+
000345 91fc      	LD   R31,X
000346 9711      	SBIW R26,1
000347 9508      	RET
                 
                 __GETW1PF:
000348 9005      	LPM  R0,Z+
000349 91f4      	LPM  R31,Z
00034a 2de0      	MOV  R30,R0
00034b 9508      	RET
                 
                 __SAVELOCR6:
00034c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00034d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00034e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00034f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000350 931a      	ST   -Y,R17
000351 930a      	ST   -Y,R16
000352 9508      	RET
                 
                 __LOADLOCR6:
000353 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000354 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000355 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000356 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000357 8119      	LDD  R17,Y+1
000358 8108      	LD   R16,Y
000359 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   2 r3 :   0 r4 :   5 r5 :   2 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   4 r23:   0 
r24:  23 r25:   5 r26:  97 r27:  38 r28:  14 r29:   1 r30: 148 r31:  58 
x  :  23 y  : 165 z  :  15 
Registers used: 27 out of 35 (77.1%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  25 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  21 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  48 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   3 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  23 ld    :  28 ldd   :  77 ldi   :  90 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  16 movw  :  16 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :   6 pop   :   1 push  :   1 rcall :  18 ret   :  23 
reti  :   0 rjmp  :  63 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   3 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  55 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006b4   1668     48   1716   32768   5.2%
[.dseg] 0x000060 0x000278      0     24     24    2048   1.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
