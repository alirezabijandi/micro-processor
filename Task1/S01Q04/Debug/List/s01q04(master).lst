
AVRASM ver. 2.1.30  L:\projects\QUESTION\parsa rajabi\Series 01\S01Q04\Debug\List\s01q04(master).asm Sun Mar 28 16:52:36 2021

L:\projects\QUESTION\parsa rajabi\Series 01\S01Q04\Debug\List\s01q04(master).asm(1088): warning: Register r4 already defined by the .DEF directive
L:\projects\QUESTION\parsa rajabi\Series 01\S01Q04\Debug\List\s01q04(master).asm(1089): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0096 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002a 0000      	.DB  0x0,0x0
                 
                 _0x3:
00002b 3130
00002c 3130
00002d 3031
00002e 3030      	.DB  0x30,0x31,0x30,0x31,0x31,0x30,0x30,0x30
00002f 3030
000030 3130
000031 3030
000032 3130      	.DB  0x30,0x30,0x30,0x31,0x30,0x30,0x30,0x31
000033 3130
000034 3131
000035 3030
000036 3130      	.DB  0x30,0x31,0x31,0x31,0x30,0x30,0x30,0x31
000037 3131
000038 3130
000039 3130
00003a 3130      	.DB  0x31,0x31,0x30,0x31,0x30,0x31,0x30,0x31
00003b 3030
00003c 3130
00003d 3130
00003e 3131      	.DB  0x30,0x30,0x30,0x31,0x30,0x31,0x31,0x31
00003f 3030
000040 3031
000041 3130
000042 3130      	.DB  0x30,0x30,0x31,0x30,0x30,0x31,0x30,0x31
000043 3030
000044 3131
000045 3031
000046 3031      	.DB  0x30,0x30,0x31,0x31,0x31,0x30,0x31,0x30
000047 3130
000048 3030
000049 3031
00004a 3131      	.DB  0x30,0x31,0x30,0x30,0x31,0x30,0x31,0x31
00004b 3130
00004c 3130
00004d 3030
00004e 3131      	.DB  0x30,0x31,0x30,0x31,0x30,0x30,0x31,0x31
00004f 3031
000050 3130
000051 3130
000052 3131      	.DB  0x31,0x30,0x30,0x31,0x30,0x31,0x31,0x31
000053 3031
000054 3031
000055 3131
000056 3130      	.DB  0x31,0x30,0x31,0x30,0x31,0x31,0x30,0x31
000057 3130
000058 3131
000059 3030
00005a 3131      	.DB  0x30,0x31,0x31,0x31,0x30,0x30,0x31,0x31
00005b 3030
00005c 3031
00005d 3031
00005e 3131      	.DB  0x30,0x30,0x31,0x30,0x31,0x30,0x31,0x31
00005f 3030
000060 3030
000061 3130
000062 3131      	.DB  0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x31
000063 3030
000064 3131
000065 3030
000066 3130      	.DB  0x30,0x30,0x31,0x31,0x30,0x30,0x30,0x31
000067 3031
000068 3030
000069 3031
00006a 3030      	.DB  0x31,0x30,0x30,0x30,0x31,0x30,0x30,0x30
00006b 3031
00006c 3131
00006d 3030
00006e 3131      	.DB  0x31,0x30,0x31,0x31,0x30,0x30,0x31,0x31
00006f 3030
000070 3131
000071 3031
000072 3131      	.DB  0x30,0x30,0x31,0x31,0x31,0x30,0x31,0x31
000073 3130
000074 3030
000075 3031
000076 3131      	.DB  0x30,0x31,0x30,0x30,0x31,0x30,0x31,0x31
000077 3131
000078 3030
000079 3030
00007a 3130      	.DB  0x31,0x31,0x30,0x30,0x30,0x30,0x30,0x31
00007b 3031
00007c 3030
00007d 3131
00007e 3030      	.DB  0x31,0x30,0x30,0x30,0x31,0x31,0x30,0x30
00007f 3030
000080 3131
000081 3130
000082 3130      	.DB  0x30,0x30,0x31,0x31,0x30,0x31,0x30,0x31
000083 3030
000084 3131
000085 3031
000086 3131      	.DB  0x30,0x30,0x31,0x31,0x31,0x30,0x31,0x31
000087 3030
000088 3030
000089 3031
00008a 3131      	.DB  0x30,0x30,0x30,0x30,0x31,0x30,0x31,0x31
00008b 3031
00008c 3131
00008d 3030
00008e 3131      	.DB  0x31,0x30,0x31,0x31,0x30,0x30,0x31,0x31
                 
                 __GLOBAL_INI_TBL:
00008f 0002      	.DW  0x02
000090 0004      	.DW  0x04
000091 0054      	.DW  __REG_VARS*2
                 
000092 00c8      	.DW  0xC8
000093 0160      	.DW  _data
000094 0056      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000095 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000096 94f8      	CLI
000097 27ee      	CLR  R30
000098 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000099 e0f1      	LDI  R31,1
00009a bffb      	OUT  GICR,R31
00009b bfeb      	OUT  GICR,R30
00009c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00009d e08d      	LDI  R24,(14-2)+1
00009e e0a2      	LDI  R26,2
00009f 27bb      	CLR  R27
                 __CLEAR_REG:
0000a0 93ed      	ST   X+,R30
0000a1 958a      	DEC  R24
0000a2 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a3 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000a4 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000a5 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000a6 93ed      	ST   X+,R30
0000a7 9701      	SBIW R24,1
0000a8 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a9 e1ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000aa e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000ab 9185      	LPM  R24,Z+
0000ac 9195      	LPM  R25,Z+
0000ad 9700      	SBIW R24,0
0000ae f061      	BREQ __GLOBAL_INI_END
0000af 91a5      	LPM  R26,Z+
0000b0 91b5      	LPM  R27,Z+
0000b1 9005      	LPM  R0,Z+
0000b2 9015      	LPM  R1,Z+
0000b3 01bf      	MOVW R22,R30
0000b4 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b5 9005      	LPM  R0,Z+
0000b6 920d      	ST   X+,R0
0000b7 9701      	SBIW R24,1
0000b8 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b9 01fb      	MOVW R30,R22
0000ba cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000bb e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000bc bfed      	OUT  SPL,R30
0000bd e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000be bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000bf e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000c0 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000c1 940c 00c3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;
                 ;
                 ;Project : master paralel
                 ;Version :
                 ;Date    : 3/28/2021
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;
                 ;unsigned char data[200] =   {
                 ;                            '0','1','0','1','1','0','0','0','0','0',
                 ;                            '0','1','0','0','0','1','0','1','1','1',
                 ;                            '0','0','0','1','1','1','0','1','0','1',
                 ;                            '0','1','0','0','0','1','0','1','1','1',
                 ;                            '0','0','1','0','0','1','0','1','0','0',
                 ;                            '1','1','1','0','1','0','0','1','0','0',
                 ;                            '1','0','1','1','0','1','0','1','0','0',
                 ;                            '1','1','1','0','0','1','0','1','1','1',
                 ;                            '1','0','1','0','1','1','0','1','0','1',
                 ;                            '1','1','0','0','1','1','0','0','1','0',
                 ;                            '1','0','1','1','0','0','0','0','0','1',
                 ;                            '1','1','0','0','1','1','0','0','0','1',
                 ;                            '1','0','0','0','1','0','0','0','1','0',
                 ;                            '1','1','0','0','1','1','0','0','1','1',
                 ;                            '1','0','1','1','0','1','0','0','1','0',
                 ;                            '1','1','1','1','0','0','0','0','0','1',
                 ;                            '1','0','0','0','1','1','0','0','0','0',
                 ;                            '1','1','0','1','0','1','0','0','1','1',
                 ;                            '1','0','1','1','0','0','0','0','1','0',
                 ;                            '1','1','1','0','1','1','0','0','1','1',
                 ;
                 ;                            };
                 
                 	.DSEG
                 ;int i = 0 ;
                 ;void main(void)
                 ; 0000 0029 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 002A         DDRC = 0xff ; // as output
0000c3 efef      	LDI  R30,LOW(255)
0000c4 bbe4      	OUT  0x14,R30
                 ; 0000 002B 
                 ; 0000 002C 
                 ; 0000 002D while (1)
                 _0x4:
                 ; 0000 002E       {
                 ; 0000 002F             if(data[i] == '0')PORTC.0 = 0;
0000c5 e6a0      	LDI  R26,LOW(_data)
0000c6 e0b1      	LDI  R27,HIGH(_data)
0000c7 0da4      	ADD  R26,R4
0000c8 1db5      	ADC  R27,R5
0000c9 91ac      	LD   R26,X
0000ca 33a0      	CPI  R26,LOW(0x30)
0000cb f411      	BRNE _0x7
0000cc 98a8      	CBI  0x15,0
                 ; 0000 0030             else PORTC.0 = 1 ;
0000cd c001      	RJMP _0xA
                 _0x7:
0000ce 9aa8      	SBI  0x15,0
                 ; 0000 0031 
                 ; 0000 0032             if(data[i+1] == '0')PORTC.1 = 0;
                 _0xA:
0000cf 01f2      	MOVW R30,R4
                +
0000d0 59ef     +SUBI R30 , LOW ( - _data - ( 1 ) )
0000d1 4ffe     +SBCI R31 , HIGH ( - _data - ( 1 ) )
                 	__ADDW1MN _data,1
0000d2 81a0      	LD   R26,Z
0000d3 33a0      	CPI  R26,LOW(0x30)
0000d4 f411      	BRNE _0xD
0000d5 98a9      	CBI  0x15,1
                 ; 0000 0033             else PORTC.1 = 1 ;
0000d6 c001      	RJMP _0x10
                 _0xD:
0000d7 9aa9      	SBI  0x15,1
                 ; 0000 0034 
                 ; 0000 0035             if(data[i+2] == '0')PORTC.2 = 0;
                 _0x10:
0000d8 01f2      	MOVW R30,R4
                +
0000d9 59ee     +SUBI R30 , LOW ( - _data - ( 2 ) )
0000da 4ffe     +SBCI R31 , HIGH ( - _data - ( 2 ) )
                 	__ADDW1MN _data,2
0000db 81a0      	LD   R26,Z
0000dc 33a0      	CPI  R26,LOW(0x30)
0000dd f411      	BRNE _0x13
0000de 98aa      	CBI  0x15,2
                 ; 0000 0036             else PORTC.2 = 1 ;
0000df c001      	RJMP _0x16
                 _0x13:
0000e0 9aaa      	SBI  0x15,2
                 ; 0000 0037 
                 ; 0000 0038             if(data[i+3] == '0')PORTC.3 = 0;
                 _0x16:
0000e1 01f2      	MOVW R30,R4
                +
0000e2 59ed     +SUBI R30 , LOW ( - _data - ( 3 ) )
0000e3 4ffe     +SBCI R31 , HIGH ( - _data - ( 3 ) )
                 	__ADDW1MN _data,3
0000e4 81a0      	LD   R26,Z
0000e5 33a0      	CPI  R26,LOW(0x30)
0000e6 f411      	BRNE _0x19
0000e7 98ab      	CBI  0x15,3
                 ; 0000 0039             else PORTC.3 = 1 ;
0000e8 c001      	RJMP _0x1C
                 _0x19:
0000e9 9aab      	SBI  0x15,3
                 ; 0000 003A 
                 ; 0000 003B             if(data[i+4] == '0')PORTC.4 = 0;
                 _0x1C:
0000ea 01f2      	MOVW R30,R4
                +
0000eb 59ec     +SUBI R30 , LOW ( - _data - ( 4 ) )
0000ec 4ffe     +SBCI R31 , HIGH ( - _data - ( 4 ) )
                 	__ADDW1MN _data,4
0000ed 81a0      	LD   R26,Z
0000ee 33a0      	CPI  R26,LOW(0x30)
0000ef f411      	BRNE _0x1F
0000f0 98ac      	CBI  0x15,4
                 ; 0000 003C             else PORTC.4 = 1 ;
0000f1 c001      	RJMP _0x22
                 _0x1F:
0000f2 9aac      	SBI  0x15,4
                 ; 0000 003D 
                 ; 0000 003E             if(data[i+5] == '0')PORTC.5 = 0;
                 _0x22:
0000f3 01f2      	MOVW R30,R4
                +
0000f4 59eb     +SUBI R30 , LOW ( - _data - ( 5 ) )
0000f5 4ffe     +SBCI R31 , HIGH ( - _data - ( 5 ) )
                 	__ADDW1MN _data,5
0000f6 81a0      	LD   R26,Z
0000f7 33a0      	CPI  R26,LOW(0x30)
0000f8 f411      	BRNE _0x25
0000f9 98ad      	CBI  0x15,5
                 ; 0000 003F             else PORTC.5 = 1 ;
0000fa c001      	RJMP _0x28
                 _0x25:
0000fb 9aad      	SBI  0x15,5
                 ; 0000 0040 
                 ; 0000 0041             if(data[i+6] == '0')PORTC.6 = 0;
                 _0x28:
0000fc 01f2      	MOVW R30,R4
                +
0000fd 59ea     +SUBI R30 , LOW ( - _data - ( 6 ) )
0000fe 4ffe     +SBCI R31 , HIGH ( - _data - ( 6 ) )
                 	__ADDW1MN _data,6
0000ff 81a0      	LD   R26,Z
000100 33a0      	CPI  R26,LOW(0x30)
000101 f411      	BRNE _0x2B
000102 98ae      	CBI  0x15,6
                 ; 0000 0042             else PORTC.6 = 1 ;
000103 c001      	RJMP _0x2E
                 _0x2B:
000104 9aae      	SBI  0x15,6
                 ; 0000 0043 
                 ; 0000 0044             if(data[i+7] == '0')PORTC.7 = 0;
                 _0x2E:
000105 01f2      	MOVW R30,R4
                +
000106 59e9     +SUBI R30 , LOW ( - _data - ( 7 ) )
000107 4ffe     +SBCI R31 , HIGH ( - _data - ( 7 ) )
                 	__ADDW1MN _data,7
000108 81a0      	LD   R26,Z
000109 33a0      	CPI  R26,LOW(0x30)
00010a f411      	BRNE _0x31
00010b 98af      	CBI  0x15,7
                 ; 0000 0045             else PORTC.7 = 1 ;
00010c c001      	RJMP _0x34
                 _0x31:
00010d 9aaf      	SBI  0x15,7
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048             delay_ms(100);
                 _0x34:
00010e e6a4      	LDI  R26,LOW(100)
00010f e0b0      	LDI  R27,0
000110 940e 011e 	CALL _delay_ms
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B             if(i<192)
000112 ece0      	LDI  R30,LOW(192)
000113 e0f0      	LDI  R31,HIGH(192)
000114 164e      	CP   R4,R30
000115 065f      	CPC  R5,R31
000116 f424      	BRGE _0x37
                 ; 0000 004C             {
                 ; 0000 004D             i = i+8 ;
000117 01f2      	MOVW R30,R4
000118 9638      	ADIW R30,8
000119 012f      	MOVW R4,R30
                 ; 0000 004E             }
                 ; 0000 004F             else
00011a c001      	RJMP _0x38
                 _0x37:
                 ; 0000 0050             {
                 ; 0000 0051             break;
00011b c001      	RJMP _0x6
                 ; 0000 0052             }
                 _0x38:
                 ; 0000 0053 
                 ; 0000 0054 
                 ; 0000 0055 
                 ; 0000 0056       }
00011c cfa8      	RJMP _0x4
                 _0x6:
                 ; 0000 0057 }
                 _0x39:
00011d cfff      	RJMP _0x39
                 ; .FEND
                 
                 	.DSEG
                 _data:
000160           	.BYTE 0xC8
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
00011e 9610      	adiw r26,0
00011f f039      	breq __delay_ms1
                 __delay_ms0:
                +
000120 ef8a     +LDI R24 , LOW ( 0xFA )
000121 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000122 9701     +SBIW R24 , 1
000123 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000124 95a8      	wdr
000125 9711      	sbiw r26,1
000126 f7c9      	brne __delay_ms0
                 __delay_ms1:
000127 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :  11 r5 :   2 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   9 r25:   3 r26:  24 r27:   5 r28:   1 r29:   1 r30:  35 r31:  12 
x  :   4 y  :   0 z  :  14 
Registers used: 15 out of 35 (42.9%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   1 
adiw  :   2 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   2 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  13 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   1 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   1 cpi   :   8 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :   8 ldd   :   0 ldi   :  21 
lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   0 movw  :  12 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :   7 pop   :   0 push  :   0 rcall :   0 ret   :   1 
reti  :   0 rjmp  :  13 rol   :   0 ror   :   0 sbc   :   0 sbci  :   7 
sbi   :   8 sbic  :   0 sbis  :   0 sbiw  :   5 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   3 std   :   0 sts   :   0 sub   :   0 subi  :   7 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 28 out of 116 (24.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000250    376    216    592   16384   3.6%
[.dseg] 0x000060 0x000228      0    200    200    1024  19.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 2 warnings
