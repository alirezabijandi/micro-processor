;/*******************************************************
;Project :
;Version :
;Date    : 3/28/2021
;Author  :
;Company :
;Comments:
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;int i = 0 ;
;unsigned char data[200]= {"abcdefghijklmnopqrstuvwxyz***ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789 ~!@#$%^&*()_+?"}  ;

	.DSEG
;char s[1];
;void main(void)
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0013 
; 0000 0014 
; 0000 0015 // USART initialization
; 0000 0016 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0017 // USART Receiver: Off
; 0000 0018 // USART Transmitter: On
; 0000 0019 // USART Mode: Asynchronous
; 0000 001A // USART Baud Rate: 9600 (Double Speed Mode)
; 0000 001B UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (1<<U2X) | (0<<MPCM);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001C UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001D UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001E UBRRH=0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001F UBRRL=0x0C;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0020 
; 0000 0021 while (1)
;PCODE: $00000018 VOL: 0
; 0000 0022       {
; 0000 0023         s[0] = data[i];
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0024         puts(s);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0025 
; 0000 0026         delay_ms(100);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0027         if(i<200)i++;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0028       }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0029 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
